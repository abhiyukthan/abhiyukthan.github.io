<?php
/*--------------------------------------------------*/
/* FILE GENERATED BY INVISION POWER BOARD 3         */
/* CACHE FILE: Skin set id: 2               */
/* CACHE FILE: Generated: Tue, 05 Jan 2016 20:03:57 GMT */
/* DO NOT EDIT DIRECTLY - THE CHANGES WILL NOT BE   */
/* WRITTEN TO THE DATABASE AUTOMATICALLY            */
/*--------------------------------------------------*/

class skin_subscriptions_2 extends skinMaster{

/**
* Construct
*/
function __construct( ipsRegistry $registry )
{
	parent::__construct( $registry );
	

$this->_funcHooks = array();


}

/* -- copyright --*/
function copyright($data=array()) {
$IPBHTML = "";
$IPBHTML .= "";
return $IPBHTML;
}

/* -- currencySelectField --*/
function currencySelectField($options) {
$IPBHTML = "";
$IPBHTML .= "<select name=\"currency\">".$this->__f__996be1ba84d2cd675f54df13a01172d3($options)."</select>";
return $IPBHTML;
}


function __f__996be1ba84d2cd675f54df13a01172d3($options)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $options as $r )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
	<option value=\"{$r['id']}\" {$r['default']}>{$r['id']} {$r['name']}</option>

";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- do_generic_payscreen_with_button --*/
function do_generic_payscreen_with_button($data=array()) {
$IPBHTML = "";

if ( ! isset( $this->registry->templateStriping['paystuff'] ) ) {
$this->registry->templateStriping['paystuff'] = array( FALSE, "row1","row2 altrow");
}
$IPBHTML .= "<div class='maintitle'>{$data['lang_title']}</div>
<div class='general_box clearfix'>
		<ul class='hfeed block_list'>
		<li>
			{$data['lang_explain']}
			<br /><br />
			{$data['lang_desc']}
			<br /><br />
			<strong>{$data['lang_extra']}</strong>
		</li>
		<li>
			<form action=\"{$data['formaction']}\" method=\"post\">
			{$data['formfields']}
			<br />
			<div align='center'>{$data['button']}</div>
			</form>
		</li>
	</ul>
</div>";
return $IPBHTML;
}

/* -- do_manual_normal_screen --*/
function do_manual_normal_screen($new_sub_id="",$desc_string="",$ccode="") {
$IPBHTML = "";
$IPBHTML .= "<script type=\"text/javascript\">
<!--
	function pop_ticket(){
		window.open('{$this->settings['js_base']}app=subscriptions&type=manual&do=custom&mode=ticket&tickid=0&upgrade=0&sid=$new_sub_id&currency=$ccode','TICKET','width=350,height=350,resizable=yes,scrollbars=yes,toolbar=yes');
	}
-->
</script>
<div class='maintitle'>{$this->lang->words['sc_complete']}</div>
<div class='message unspecific'>
	<p>{$desc_string}</p><br />
	<p>{$this->lang->words['post_manual']}</p><br />
	<p>{$this->lang->words['post_manual_more']}</p><br />
</div>
<div class='moderation_bar rounded  clear'>
	<input class='button' type=\"button\" value=\"{$this->lang->words['gw_manual']}\" onclick=\"pop_ticket()\" />
</div>";
return $IPBHTML;
}

/* -- do_manual_upgrade_screen --*/
function do_manual_upgrade_screen($new_sub_id="",$cur_id="",$desc_string="",$ccode="") {
$IPBHTML = "";
$IPBHTML .= "<script type=\"text/javascript\">
<!--
function pop_ticket(){
	window.open('{$this->settings['js_base']}act=paysubs&type=manual&do=custom&mode=ticket&tickid={$cur_id}&upgrade=1&sid=$new_sub_id&currency=$ccode','TICKET','width=350,height=350,resizable=yes,scrollbars=yes,toolbar=yes');
}
-->
</script>
<div class='maintitle'>{$this->lang->words['sc_upgrade_title']}</div>
<div class='message unspecific'>
	<p>{$desc_string}</p><br />
	<p>{$this->lang->words['post_manual']}</p><br />
	<p>{$this->lang->words['post_manual_more']}</p><br />
</div>
<div class='moderation_bar rounded  clear'>
	<input class='button' type=\"button\" value=\"{$this->lang->words['gw_manual']}\" onclick=\"pop_ticket()\" />
</div>";
return $IPBHTML;
}

/* -- hookBadge --*/
function hookBadge($data) {
$IPBHTML = "";

if ( ! isset( $this->registry->templateStriping['subs_badge'] ) ) {
$this->registry->templateStriping['subs_badge'] = array( FALSE, "row1","row2 altrow");
}
$IPBHTML .= "<div class='general_box clearfix'>
		<h3><img src='{$this->settings['img_url']}/user_green.png' alt='' /> {$this->lang->words['sh_badge_title']}</h3>
		<ul class='hfeed block_list'>
						<li class='hentry " .  IPSLib::next( $this->registry->templateStriping["subs_badge"] ) . "'>
				{$this->lang->words['smb_c_pkg']} <strong>{$data['sub_title']}</strong>
			</li>
			<li class='hentry " .  IPSLib::next( $this->registry->templateStriping["subs_badge"] ) . "'>
				{$this->lang->words['smb_p_wth']} <strong>" . ucwords($data['subtrans_method']) . "" . (($data['subtrans_recurring']) ? (" {$this->lang->words['smb_p_sub']}") : ("")) . "</strong>
			</li>
			<li class='hentry " .  IPSLib::next( $this->registry->templateStriping["subs_badge"] ) . "'>
				{$this->lang->words['smb_p_unt']} <strong>{$data['_endDate']}</strong>
			</li>
			<li class='hentry " .  IPSLib::next( $this->registry->templateStriping["subs_badge"] ) . "'> 
				" . (($data['subtrans_state'] == 'paid' AND $data['subtrans_recurring']) ? ("
					{$this->lang->words['smb_r_aut']} {$data['_endDate']}.
				") : ("")) . "" . (($data['subtrans_state'] == 'paid' AND ! $data['subtrans_recurring']) ? ("
					{$this->lang->words['smb_p_unl']} {$data['_endDate']}. {$this->lang->words['smb_n_rnw']}
				") : ("")) . "" . (($data['subtrans_state'] == 'canceled') ? ("
					{$this->lang->words['smb_p_cnl']} {$data['_endDate']}.
				") : ("")) . " 
			</li>
		</p>
	</div>";
return $IPBHTML;
}

/* -- hookUserDropDownLink --*/
function hookUserDropDownLink() {
$IPBHTML = "";
$IPBHTML .= "<li id='user_subsm'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=subscriptions", "public",'' ), "", "" ) . "'\">" . (($this->memberData['sub_end']) ? ("{$this->lang->words['subs_dd_manage']}") : ("{$this->lang->words['subs_dd_purchase']}")) . "</a></li>";
return $IPBHTML;
}

/* -- indexScreen --*/
function indexScreen($deadRows, $currRows, $upgradeRows, $newRows, $cur_id, $currency, $currencyOptions, $currencyUrl, $hasRecurringPayments=false, $canRenew=false) {
$IPBHTML = "";

if ( ! isset( $this->registry->templateStriping['pkgs'] ) ) {
$this->registry->templateStriping['pkgs'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "" . (($this->request['currency']) ? ("
<div class=\"message\">
	{$this->lang->words['subs_currency_selected']}
</div>
<br />
") : ("")) . "
<!--{MSG}-->
" . (($canRenew) ? ("
	<div class='message'>{$this->lang->words['subs_can_renew_msg']}</div>
	<br />
") : ("")) . "" . ((is_array( $currRows ) && count( $currRows )) ? ("
<table class='ipb_table'>
	<caption class='maintitle'>{$this->lang->words['s_current_subs']}</caption>
	<tr class='header'>
		<th scope='col' width='1%'>&nbsp;</th>
		<th scope='col' width='30%'>{$this->lang->words['s_detail']}</th>
		<th scope='col'>{$this->lang->words['s_started']}</th>
		<th scope='col'>{$this->lang->words['s_end']}</th>
		<th scope='col'>{$this->lang->words['s_paid']}</th>
		<th scope='col'>{$this->lang->words['s_status']}</th>
	</tr>
	".$this->__f__739ddcb40c06cf491954e0677ef08a5e($deadRows,$currRows,$upgradeRows,$newRows,$cur_id,$currency,$currencyOptions,$currencyUrl,$hasRecurringPayments,$canRenew)."</table>
<br />
") : ("")) . "
" . ((is_array( $upgradeRows ) && count( $upgradeRows )) ? ("" . (($hasRecurringPayments) ? ("
	<div class='message'>{$this->lang->words['s_upgrades_rp']}</div>
") : ("
	<div class='message unspecific'>{$this->lang->words['s_upgrade_subs']} {$this->lang->words['s_current_bottom']}</div>
")) . "
<br /> 
<form action=\"{$this->settings['base_url']}app=subscriptions&amp;module=subscriptions&amp;section=paysubs&amp;nocp={$this->request['nocp']}&amp;upgrade=1&amp;do=paymentmethod&amp;curid=$cur_id\" method=\"post\">             
	<table class='ipb_table'>
		<caption class='maintitle'>{$this->lang->words['s_upgrade_subs']}</caption>
		<tr class='header'>
			<th scope='col' width='1%'>&nbsp;</th>
			<th scope='col' width='1%'>&nbsp;</th>
			<th scope='col' width='28%'>{$this->lang->words['s_detail']}</th>
			<th scope='col'>{$this->lang->words['s_end']}</th>
			<th scope='col'>{$this->lang->words['s_balance_cost']}</th>
		</tr>
	".$this->__f__a539dbb0bbbf570e12c9d6394e80cdd6($deadRows,$currRows,$upgradeRows,$newRows,$cur_id,$currency,$currencyOptions,$currencyUrl,$hasRecurringPayments,$canRenew)."	</table>
	" . ((!$hasRecurringPayments) ? ("
	<div class='moderation_bar rounded  clear'>
		<input type=\"submit\" class='input_submit' value=\"{$this->lang->words['s_continue_button']}\" />
	</div>
	") : ("")) . "
</form>
<br />") : ("")) . "
" . ((is_array( $newRows ) && count( $newRows )) ? ("
<div class='message unspecific'>{$this->lang->words['s_explain']} {$this->lang->words['s_current_bottom']}</div>
<form action=\"{$this->settings['base_url']}app=subscriptions&amp;module=subscriptions&amp;section=paysubs&amp;nocp={$this->request['nocp']}&amp;do=paymentmethod\" method=\"post\">             
	<table class='ipb_table'>
		<caption class='maintitle'>{$this->lang->words['s_available_subs']}</caption>
		<tr class='header'>
			<th scope='col' width='1%'>&nbsp;</th>
			<th scope='col' width='1%'>&nbsp;</th>
			<th scope='col' width='60%'>{$this->lang->words['s_detail']}</th>
			<th scope='col' width='23%'>{$this->lang->words['s_duration']}</th>
			<th scope='col' width='15%'>{$this->lang->words['s_cost']}</th>
		</tr>
	".$this->__f__4435280e14ba0b4dc28f39d7d6d94bd0($deadRows,$currRows,$upgradeRows,$newRows,$cur_id,$currency,$currencyOptions,$currencyUrl,$hasRecurringPayments,$canRenew)."	</table>
	<div class='moderation_bar rounded  clear'>
		<input type=\"submit\" class='input_submit' value=\"{$this->lang->words['s_continue_button']}\" />
	</div>
</form>
<br />
") : ("")) . "
" . ((is_array( $deadRows ) && count( $deadRows )) ? ("
<table class='ipb_table'>
	<caption class='maintitle'>{$this->lang->words['s_dead_subs']}</caption>
	<tr class='header'>
		<th scope='col' width='1%'>&nbsp;</th>
		<th scope='col' width='30%'>{$this->lang->words['s_detail']}</th>
		<th scope='col'>{$this->lang->words['s_started']}</th>
		<th scope='col'>{$this->lang->words['s_end']}</th>
		<th scope='col'>{$this->lang->words['s_paid']}</th>
		<th scope='col'>{$this->lang->words['s_status']}</th>
	</tr>
	".$this->__f__30c12a934fe7bf15a52541950aadf7ae($deadRows,$currRows,$upgradeRows,$newRows,$cur_id,$currency,$currencyOptions,$currencyUrl,$hasRecurringPayments,$canRenew)."</table>
") : ("")) . "
" . ((( is_array( $upgradeRows ) && count( $upgradeRows ) ) OR ( is_array( $newRows ) && count( $newRows ) )) ? ("
	<div class='moderation_bar rounded  clear'>
		<form action=\"{$currencyUrl}\" method=\"post\">
			{$this->lang->words['cc_currency_in']} {$currencyOptions} 
			<input type=\"submit\" class='input_submit' value=\"{$this->lang->words['cc_change']}\" />
		</form>
	</div>
") : ("")) . "";
return $IPBHTML;
}


function __f__739ddcb40c06cf491954e0677ef08a5e($deadRows, $currRows, $upgradeRows, $newRows, $cur_id, $currency, $currencyOptions, $currencyUrl, $hasRecurringPayments=false, $canRenew=false)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $currRows as $r )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
	<tr class='" .  IPSLib::next( $this->registry->templateStriping["pkgs"] ) . "'>
		<td class='short altrow'><img src='{$this->settings['img_url']}/subscriptions/subs_current.png' /></td>
		<td><h4 style='font-weight:bold'>{$r['name']}</h4><div class='desc'>{$r['desc']}</div></td>
		<td>{$r['start']}</td>
		<td>
			" . (($r['_state'] == 'paid' AND $r['recurring']) ? ("{$this->lang->words['subs_next_payment']}&nbsp;") : ("")) . "{$r['end']}
			" . (($r['renewable']) ? (" (<a href=\"{$this->settings['base_url']}app=subscriptions&amp;module=subscriptions&amp;section=paysubs&amp;renew=1&amp;do=paymentmethod&amp;curid=$cur_id\" style='color:red'>{$this->lang->words['subs_renew_now']}</a>)") : ("")) . "
			" . (($r['_state'] == 'paid' AND $r['recurring']) ? ("<div class='desc'>" . sprintf($this->lang->words['subs_auto_pay'], ucwords($r['method'])) . "") : ("")) . "
		</td>
		<td class='altrow'>{$r['paid']}</td>
		<td>{$r['state']}" . (($r['_cancelButton']) ? (" &middot; {$r['_cancelButton']}") : ("")) . "" . (($r['_state'] == 'canceled' AND $r['recurring']) ? ("<div class='desc'>{$this->lang->words['subs_active_cancel']}</div>") : ("")) . "</td>
	</tr>
	
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__a539dbb0bbbf570e12c9d6394e80cdd6($deadRows, $currRows, $upgradeRows, $newRows, $cur_id, $currency, $currencyOptions, $currencyUrl, $hasRecurringPayments=false, $canRenew=false)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $upgradeRows as $r )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
		<tr class='" .  IPSLib::next( $this->registry->templateStriping["pkgs"] ) . "'>
			<td class='short altrow'><img src='{$this->settings['img_url']}/subscriptions/subs_upgrade.png' /></td>
			<td class='short altrow'>" . (($hasRecurringPayments) ? ("<img src='{$this->settings['img_url']}/exclamation.png' />") : ("<input class='radiobutton' type='radio' name='sub' value='{$r['id']}' />")) . "</td>
			<td><h4 style='font-weight:bold'>{$r['name']}</h4><div class='desc'>{$r['desc']}</div></td>
			<td>{$r['duration']}</td>
			<td class='altrow'>{$r['cost']}</td>
		</tr>
	
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__4435280e14ba0b4dc28f39d7d6d94bd0($deadRows, $currRows, $upgradeRows, $newRows, $cur_id, $currency, $currencyOptions, $currencyUrl, $hasRecurringPayments=false, $canRenew=false)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $newRows as $r )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
		<tr class='" .  IPSLib::next( $this->registry->templateStriping["pkgs"] ) . "'>
			<td class='short altrow'><img src='{$this->settings['img_url']}/subscriptions/subs_new.png' /></td>
			<td class='short altrow'><input class='radiobutton' type=\"radio\" name=\"sub\" value=\"{$r['id']}\" /></td>
			<td width='30%'><h4 style='font-weight:bold'>{$r['name']}</h4><div class='desc'>{$r['desc']}</div></td>
			<td>{$r['duration']}</td>
			<td class='altrow'>{$r['cost']}</td>
		</tr>
	
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__30c12a934fe7bf15a52541950aadf7ae($deadRows, $currRows, $upgradeRows, $newRows, $cur_id, $currency, $currencyOptions, $currencyUrl, $hasRecurringPayments=false, $canRenew=false)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $deadRows as $r )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
	<tr class='" .  IPSLib::next( $this->registry->templateStriping["pkgs"] ) . "'>
		<td class='short altrow'><img src='{$this->settings['img_url']}/subscriptions/subs_expired.png' /></td>
		<td><strong>{$r['name']}</strong></td>
		<td>{$r['start']}</td>
		<td>{$r['end']}</td>
		<td class='altrow'>{$r['paid']}</td>
		<td>{$r['state']}</td>
	</tr>
	
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- paymentMethods --*/
function paymentMethods($sub_chosen, $upgrade, $curid, $currency, $rows) {
$IPBHTML = "";

if ( ! isset( $this->registry->templateStriping['methods'] ) ) {
$this->registry->templateStriping['methods'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "<!--{MSG}-->
" . (($upgrade) ? ("
<div class='message error'>
{$this->lang->words['subs_upgrade_warning']}
</div>
<br />
<div class='message'>
	{$this->lang->words['sc_upgrade_title']}
	<p>{$this->lang->words['sc_upgrade_explain']}</p><br />
	<p>{$this->lang->words['sc_upgrade_string']}</p>
</div>
<br />
") : ("
<div class='message'>
	{$this->lang->words['sc_normal_title']}
	<p>{$this->lang->words['sc_upgrade_explain']}</p><br />
	<p>{$this->lang->words['sc_normal_string']}</p>
</div>
<br />
")) . "
<form action=\"{$this->settings['base_url']}app=subscriptions&amp;module=subscriptions&amp;section=paysubs&amp;nocp={$this->request['nocp']}&amp;upgrade=$upgrade&amp;do=paymentscreen&amp;curid=$curid&amp;sub=$sub_chosen&amp;currency=$currency&amp;renew={$this->request['renew']}\" method=\"post\">             
	<table class='ipb_table'>
		<caption class='maintitle'>{$this->lang->words['sc_available_methods']}</caption>
		<tr class='header'>
			<th scope='col' width='1%'>&nbsp;</th>
			<th scope='col' width='1%'>&nbsp;</th>
			<th scope='col'>{$this->lang->words['sc_method']}</th>
		</tr>
				".$this->__f__b252b53969bdc0934b7e934b9f0ee247($sub_chosen,$upgrade,$curid,$currency,$rows)."	</table>
	<div class='moderation_bar rounded  clear'>
		<input class='input_submit' type='submit' value='{$this->lang->words['s_continue_button2']}' />
	</div>
</form>";
return $IPBHTML;
}


function __f__b252b53969bdc0934b7e934b9f0ee247($sub_chosen, $upgrade, $curid, $currency, $rows)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $rows as $r )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<tr class='" .  IPSLib::next( $this->registry->templateStriping["methods"] ) . "'>
				<td class='short altrow'><img src='{$this->settings['img_url']}/subscriptions/{$r['img']}' /></td>
				<td class='short altrow'><input class='radiobutton' type='radio' name='methodid' value='{$r['mid']}'" . ((!$r['c']) ? (" checked='checked'") : ("")) . " /></td>
				<td><strong>{$r['name']}</strong><div class='desc'>{$r['desc']}</div></td>
			</tr>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- regComplete --*/
function regComplete($currency, $packages) {
$IPBHTML = "";
$IPBHTML .= "<!--no data in this master skin-->";
return $IPBHTML;
}

/* -- regForm --*/
function regForm($currency, $packages) {
$IPBHTML = "";
$IPBHTML .= "<script type='text/javascript' src='{$this->settings['public_dir']}js/ips.subscriptions.js'></script>
<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["register"] ) . "'>
	<h3 class='bar'>{$this->lang->words['subsm_title']}</h3>
	<p class='message unspecific'>
		{$this->lang->words['subs_select_package']}
		" . ((! $this->settings['subsm_enforce']) ? ("<br /><em class='desc'>{$this->lang->words['subs_select_optional']}</em>") : ("")) . "
	</p>
	<ul>
		" . ((! $this->settings['subsm_enforce']) ? ("
			<li class='field checkbox'>
				<input type='radio' name='sm__package' id=\"sm__0\" value='0' class='sm__radio' checked=\"checked\" />
				<label for='sm__0'>&nbsp;&nbsp;<em>{$this->lang->words['subsm_none']}</em></label>
			</li>
		") : ("")) . "".$this->__f__31928c090fb9461940b30d1c133ed710($currency,$packages)."	</ul>
</fieldset>";
return $IPBHTML;
}


function __f__31928c090fb9461940b30d1c133ed710($currency, $packages)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $packages as $package )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<li class='field checkbox'>
				<input type='radio' name='sm__package' id=\"sm__{$package['sub_id']}\" class='sm__radio' value='{$package['sub_id']}' />
				 <label for='sm__{$package['sub_id']}'>&nbsp;&nbsp;<strong>{$package['sub_title']} ({$package['_sub_duration']})</strong> - {$package['_sub_cost']} {$currency['subcurrency_code']}</label>
				 <span class='desc' style='padding-left:50px'>{$package['sub_desc']}</span>
			</li>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- show_ticket --*/
function show_ticket($sub="",$id="",$paid="",$extra="") {
$IPBHTML = "";
$IPBHTML .= "<table class='ipb_table'>
	<caption class='maintitle'>{$this->lang->words['man_title']}</caption>
	<tr>
		<td class='row2'>{$this->lang->words['man_mem']}</td>
		<td class='row1'>{$this->memberData['members_display_name']}</td>
	</tr>
	<tr>
		<td class='row2'>{$this->lang->words['man_mem_id']}</td>
		<td class='row1'>{$this->memberData['member_id']}</td>
	</tr>
	<tr>
		<td class='row2'>{$this->lang->words['man_email']}</td>
		<td class='row1'>{$this->memberData['email']}</td>
	</tr>
	<tr>
		<td class='row2'>{$this->lang->words['man_trans_id']}</td>
		<td class='row1'>{$id}</td>
	</tr>
	<tr>
		<td class='row2'>{$this->lang->words['man_sub']}</td>
		<td class='row1'>{$sub['sub_title']} $extra</td>
	</tr>
	<tr>
		<td class='row2'>{$this->lang->words['man_pay']}</td>
		<td class='row1'>{$paid}</td>
	</tr>
</table>";
return $IPBHTML;
}

/* -- sub_msg_force --*/
function sub_msg_force() {
$IPBHTML = "";
$IPBHTML .= "<div class=\"message error\">
	<h4>{$this->lang->words['msg_force_title']}</h4>
	<p>
		{$this->lang->words['msg_force_text']}
" . (($this->request['do'] == 'paymentmethod') ? ("
<br /><br />
		<div>
			<div class='row2'><input type=\"button\" class=\"input_submit alt\" value=\"&lt; &lt; {$this->lang->words['choose_another_pkg']}\" onclick=\"window.location='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=subscriptions&amp;section=paysubs&amp;msgtype=general&amp;nocp={$this->request['nocp']}", "publicWithApp",'' ), "", "" ) . "';\" /></div>
		</div>
") : ("")) . "
		</p>
	</div>
<br />";
return $IPBHTML;
}

/* -- sub_msg_fromreg --*/
function sub_msg_fromreg() {
$IPBHTML = "";
$IPBHTML .= "<div class='borderwrap'>
 <div class='maintitle'>{$this->lang->words['msg_reg_title']}</div>
	<div class=\"row1\" style='padding:10px;'>
		{$this->lang->words['msg_reg_text']}
			<br /><br />
		<div align='center'>
			<input type=\"button\" class=\"input_submit alt\" value=\"&lt; &lt; {$this->lang->words['choose_another_pkg']}\" onclick=\"window.location='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=subscriptions&section=paysubs&msgtype=general", "publicWithApp",'' ), "", "" ) . "';\" />
" . (($this->settings['subsm_enforce'] != 1) ? ("
&nbsp; &nbsp;<input type=\"button\" class=\"input_submit alt\" value=\"{$this->lang->words['cancel_purchase']} &gt; &gt;\" onclick=\"window.location='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=subscriptions&section=paysubs&do=cancelFromReg", "publicWithApp",'' ), "", "" ) . "';\" />
") : ("")) . "
		</div>
	</div>
</div>
<br />";
return $IPBHTML;
}

/* -- sub_msg_general --*/
function sub_msg_general() {
$IPBHTML = "";
$IPBHTML .= "<div class=\"borderwrapm\">
	<div class=\"row1\">
		<b>{$this->lang->words['msg_gen_title']}</b><br /><br />
		{$this->lang->words['msg_gen_text']}<br /><br />
		<div>
" . (($this->settings['subsm_enforce'] != 1) ? ("
&nbsp; &nbsp;<input type=\"button\" class=\"input_submit alt\" value=\"{$this->lang->words['cancel_purchase']} &gt; &gt;\" onclick=\"window.location='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=subscriptions&section=paysubs&do=cancelFromReg", "publicWithApp",'' ), "", "" ) . "';\" />
") : ("")) . "
		</div>
	</div>
</div>
<br />";
return $IPBHTML;
}

/* -- testPaymentScreen --*/
function testPaymentScreen($accept) {
$IPBHTML = "";
$IPBHTML .= "<div class='message unspecific'>
This is just a test payment gateway. No money will be taken.
</div>
<br />
<form action=\"{$this->request['responderurl']}\" method=\"POST\">".$this->__f__e3cd60e85c8b6bc94aed98ed805025ac($accept)."<table class='ipb_table'>
	<caption class='maintitle'>Data passed</caption>
	".$this->__f__df16695c900e4d4bf55cb2e2a0907167($accept)."</table>
<div class='moderation_bar rounded  clear'>
	<input class='button' type=\"submit\" value=\"Pay Now\" />
</div>
</form>";
return $IPBHTML;
}


function __f__e3cd60e85c8b6bc94aed98ed805025ac($accept)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $accept as $field )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
	<input type='hidden' name='test__{$field}' value=\"{$this->request[ $field ]}\" />

";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__df16695c900e4d4bf55cb2e2a0907167($accept)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $accept as $field )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
		<tr>
			<td class='row2'>$field</td>
			<td class='row1'>{$this->request[ $field ]}</td>
		</tr>
	
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}


}


/*--------------------------------------------------*/
/* END OF FILE                                      */
/*--------------------------------------------------*/

?>