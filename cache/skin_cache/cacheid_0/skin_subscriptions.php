<?php
/*--------------------------------------------------*/
/* FILE GENERATED BY INVISION POWER BOARD 3         */
/* CACHE FILE: Skin set id: 0               */
/* CACHE FILE: Generated: Tue, 19 Jan 2016 05:37:47 GMT */
/* DO NOT EDIT DIRECTLY - THE CHANGES WILL NOT BE   */
/* WRITTEN TO THE DATABASE AUTOMATICALLY            */
/*--------------------------------------------------*/

class skin_subscriptions_0 extends skinMaster{

/**
* Construct
*/
function __construct( ipsRegistry $registry )
{
	parent::__construct( $registry );
	

$this->_funcHooks = array();
$this->_funcHooks['indexScreen'] = array('paidAndRecurringOne','isRenewable','paidAndRecurringTwo','hasCancelButton','canceledAndRecurring','currentLoop','recurWarn','upgradeLoop','newLoop','deadLoop','selectedCurrency','canRenew','hasCurrent','recurMessage','noRecurring','hasUpgrades','hasNewStart','hasNewLoop','hasNewEnd','hasDead','showPricePreview');


}

/* -- copyright --*/
function copyright($data=array()) {
$IPBHTML = "";
$IPBHTML .= "<div id=\"subsCopyright\">
	Powered by {$data['app_name']} {$data['app_version']} &copy; {$data['year']}, by <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "{$data['site']}", "none",'' ), "", "" ) . "' rel='nofollow external'>{$data['author']}</a>{$data['extra']}
</div>";
return $IPBHTML;
}

/* -- currencySelectField --*/
function currencySelectField($options) {
$IPBHTML = "";
$IPBHTML .= "<select name=\"currency\">".$this->__f__f14c097f7a92a86e2a85269cffe08998($options)."</select>";
return $IPBHTML;
}


function __f__f14c097f7a92a86e2a85269cffe08998($options)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $options as $r )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
	<option value=\"{$r['id']}\" {$r['default']}>{$r['id']} {$r['name']}</option>

";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- do_generic_payscreen_with_button --*/
function do_generic_payscreen_with_button($data=array()) {
$IPBHTML = "";

if ( ! isset( $this->registry->templateStriping['paystuff'] ) ) {
$this->registry->templateStriping['paystuff'] = array( FALSE, "row1","row2 altrow");
}
$IPBHTML .= "<div class='maintitle'>{$data['lang_title']}</div>
<div class='general_box clearfix'>
		<ul class='hfeed block_list'>
		<li>
			{$data['lang_explain']}
			<br /><br />
			{$data['lang_desc']}
			<br /><br />
			<strong>{$data['lang_extra']}</strong>
		</li>
		<li>
			<form action=\"{$data['formaction']}\" method=\"post\">
			{$data['formfields']}
			<br />
			<div align='center'>{$data['button']}</div>
			</form>
		</li>
	</ul>
</div>";
return $IPBHTML;
}

/* -- do_manual_normal_screen --*/
function do_manual_normal_screen($new_sub_id="",$desc_string="",$ccode="") {
$IPBHTML = "";
$IPBHTML .= "<script type=\"text/javascript\">
<!--
	function pop_ticket(){
		window.open('{$this->settings['js_base']}app=subscriptions&type=manual&do=custom&mode=ticket&tickid=0&upgrade=0&sid=$new_sub_id&currency=$ccode','TICKET','width=350,height=350,resizable=yes,scrollbars=yes,toolbar=yes');
	}
-->
</script>
<div class='maintitle'>{$this->lang->words['sc_complete']}</div>
<div class='message unspecific'>
	<p>{$desc_string}</p><br />
	<p>{$this->lang->words['post_manual']}</p><br />
	<p>{$this->lang->words['post_manual_more']}</p><br />
</div>
<div class='moderation_bar rounded  clear'>
	<input class='button' type=\"button\" value=\"{$this->lang->words['gw_manual']}\" onclick=\"pop_ticket()\" />
</div>";
return $IPBHTML;
}

/* -- do_manual_upgrade_screen --*/
function do_manual_upgrade_screen($new_sub_id="",$cur_id="",$desc_string="",$ccode="") {
$IPBHTML = "";
$IPBHTML .= "<script type=\"text/javascript\">
<!--
function pop_ticket(){
	window.open('{$this->settings['js_base']}act=paysubs&type=manual&do=custom&mode=ticket&tickid={$cur_id}&upgrade=1&sid=$new_sub_id&currency=$ccode','TICKET','width=350,height=350,resizable=yes,scrollbars=yes,toolbar=yes');
}
-->
</script>
<div class='maintitle'>{$this->lang->words['sc_upgrade_title']}</div>
<div class='message unspecific'>
	<p>{$desc_string}</p><br />
	<p>{$this->lang->words['post_manual']}</p><br />
	<p>{$this->lang->words['post_manual_more']}</p><br />
</div>
<div class='moderation_bar rounded  clear'>
	<input class='button' type=\"button\" value=\"{$this->lang->words['gw_manual']}\" onclick=\"pop_ticket()\" />
</div>";
return $IPBHTML;
}

/* -- hookBadge --*/
function hookBadge($data) {
$IPBHTML = "";

if ( ! isset( $this->registry->templateStriping['subs_badge'] ) ) {
$this->registry->templateStriping['subs_badge'] = array( FALSE, "row1","row2 altrow");
}
$IPBHTML .= "<div class=\"ipsSideBlock\">
	<h3>{$this->lang->words['sh_badge_title']}</h3>
	<ul class=\"block_list\">
				<li class=\"" .  IPSLib::next( $this->registry->templateStriping["subs_badge"] ) . "\">
			{$this->lang->words['smb_c_pkg']} <strong>{$data['sub_title']}</strong>
		</li>
		<li class=\"" .  IPSLib::next( $this->registry->templateStriping["subs_badge"] ) . "\">
			{$this->lang->words['smb_p_wth']} <strong>" . ucwords($data['subtrans_method']) . "" . (($data['subtrans_recurring']) ? (" {$this->lang->words['smb_p_sub']}") : ("")) . "</strong>
		</li>
		<li class=\"" .  IPSLib::next( $this->registry->templateStriping["subs_badge"] ) . "\">
			{$this->lang->words['smb_p_unt']} <strong>{$data['_endDate']}</strong>
		</li>
		" . (($data['subtrans_end_date'] != 9999999999) ? ("<li class=\"" .  IPSLib::next( $this->registry->templateStriping["subs_badge"] ) . "\"> 
				" . (($data['subtrans_state'] == 'paid' AND $data['subtrans_recurring']) ? ("
					{$this->lang->words['smb_r_aut']} {$data['_endDate']}.
				") : ("")) . "" . (($data['subtrans_state'] == 'paid' AND ! $data['subtrans_recurring']) ? ("
					{$this->lang->words['smb_p_unl']} {$data['_endDate']}. {$this->lang->words['smb_n_rnw']}
				") : ("")) . "" . (($data['subtrans_state'] == 'canceled') ? ("
					{$this->lang->words['smb_p_cnl']} {$data['_endDate']}.
				") : ("")) . " 
			</li>") : ("")) . "
	</ul>
</div>";
return $IPBHTML;
}

/* -- hookUserDropDownLink --*/
function hookUserDropDownLink() {
$IPBHTML = "";
$IPBHTML .= "<li id='user_subsm'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=subscriptions", "public",'' ), "false", "app=subscriptions" ) . "'\">" . (($this->memberData['sub_end']) ? ("{$this->lang->words['subs_dd_manage']}") : ("{$this->lang->words['subs_dd_purchase']}")) . "</a></li>";
return $IPBHTML;
}

/* -- indexScreen --*/
function indexScreen($deadRows, $currRows, $upgradeRows, $newRows, $cur_id, $currency, $currencyOptions, $currencyUrl, $hasRecurringPayments=false, $canRenew=false) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_subscriptions', $this->_funcHooks['indexScreen'] ) )
{
$count_f79e08b4b35ebce80664b24e29d43d86 = is_array($this->functionData['indexScreen']) ? count($this->functionData['indexScreen']) : 0;
$this->functionData['indexScreen'][$count_f79e08b4b35ebce80664b24e29d43d86]['deadRows'] = $deadRows;
$this->functionData['indexScreen'][$count_f79e08b4b35ebce80664b24e29d43d86]['currRows'] = $currRows;
$this->functionData['indexScreen'][$count_f79e08b4b35ebce80664b24e29d43d86]['upgradeRows'] = $upgradeRows;
$this->functionData['indexScreen'][$count_f79e08b4b35ebce80664b24e29d43d86]['newRows'] = $newRows;
$this->functionData['indexScreen'][$count_f79e08b4b35ebce80664b24e29d43d86]['cur_id'] = $cur_id;
$this->functionData['indexScreen'][$count_f79e08b4b35ebce80664b24e29d43d86]['currency'] = $currency;
$this->functionData['indexScreen'][$count_f79e08b4b35ebce80664b24e29d43d86]['currencyOptions'] = $currencyOptions;
$this->functionData['indexScreen'][$count_f79e08b4b35ebce80664b24e29d43d86]['currencyUrl'] = $currencyUrl;
$this->functionData['indexScreen'][$count_f79e08b4b35ebce80664b24e29d43d86]['hasRecurringPayments'] = $hasRecurringPayments;
$this->functionData['indexScreen'][$count_f79e08b4b35ebce80664b24e29d43d86]['canRenew'] = $canRenew;
}
$IPBHTML .= "<h1 class=\"ipsType_pagetitle\">" . IPSLib::getAppTitle('subscriptions') . "</h1>
<br />
" . (($this->request['currency']) ? ("
	<div class=\"message\">
		{$this->lang->words['subs_currency_selected']}
	</div>
	<br />
") : ("")) . "
<!--{MSG}-->
" . (($canRenew) ? ("
	<div class=\"message\">
		{$this->lang->words['subs_can_renew_msg']}
	</div>
	<br />
") : ("")) . "
<div class=\"maintitle\">{$this->lang->words['s_current_subs']}</div>
<div class=\"ipsBox\">
	<div class=\"ipsBox_container\">
		" . ((is_array( $currRows ) && count( $currRows )) ? ("
			<table class=\"ipb_table\">
				<tr class=\"header\">
					<th class=\"col_m_photo\">&nbsp;</th>
					<th style=\"width: 30%;\">{$this->lang->words['s_detail']}</th>
					<th class=\"short\">{$this->lang->words['s_started']}</th>
					<th class=\"short\">{$this->lang->words['s_end']}</th>
					<th class=\"short\">{$this->lang->words['s_paid']}</th>
					<th class=\"short\">{$this->lang->words['s_status']}</th>
				</tr>
				".$this->__f__6d00fa498eaa1d7dd09254a62edc9052($deadRows,$currRows,$upgradeRows,$newRows,$cur_id,$currency,$currencyOptions,$currencyUrl,$hasRecurringPayments,$canRenew)."			</table>
		") : ("
			<div class=\"no_messages\">{$this->lang->words['index_no_current']}</div>
		")) . "
	</div>
</div>
<br />
" . ((is_array( $upgradeRows ) && count( $upgradeRows )) ? ("" . (($hasRecurringPayments) ? ("
		<div class=\"message\">{$this->lang->words['s_upgrades_rp']}</div>
	") : ("
		<div class=\"message unspecific\">{$this->lang->words['s_upgrade_subs']} {$this->lang->words['s_current_bottom']}</div>
	")) . "
	<br /> 
	<form action=\"{$this->settings['base_url']}app=subscriptions&amp;module=subscriptions&amp;section=paysubs&amp;nocp={$this->request['nocp']}&amp;upgrade=1&amp;do=paymentmethod&amp;curid=$cur_id\" method=\"post\">  
		<div class=\"maintitle\">{$this->lang->words['s_upgrade_subs']}</div>
		<div class=\"ipsBox\">
			<div class=\"ipsBox_container\">
				<table class=\"ipb_table\">
					<tr class=\"header\">
						<th class=\"col_m_photo\">&nbsp;</th>
						<th style=\"width: 1%;\">&nbsp;</th>
						<th style=\"width: 28%;\">{$this->lang->words['s_detail']}</th>
						<th class=\"short\">{$this->lang->words['s_end']}</th>
						<th class=\"short\">{$this->lang->words['s_balance_cost']}</th>
					</tr>
					".$this->__f__863d8dd03f81fff9a1ba7c7460715d27($deadRows,$currRows,$upgradeRows,$newRows,$cur_id,$currency,$currencyOptions,$currencyUrl,$hasRecurringPayments,$canRenew)."				</table>
				" . ((!$hasRecurringPayments) ? ("
					<fieldset class=\"submit\">
						<input type=\"submit\" class=\"input_submit\" value=\"{$this->lang->words['s_continue_button']}\" />
					</fieldset>
				") : ("")) . "
			</div>
		</div>
	</form>
	<br />") : ("")) . "
" . ((is_array( $newRows ) && count( $newRows )) ? ("
	<div class=\"message unspecific\">
		{$this->lang->words['s_explain']} {$this->lang->words['s_current_bottom']}
	</div>
	<form action=\"{$this->settings['base_url']}app=subscriptions&amp;module=subscriptions&amp;section=paysubs&amp;nocp={$this->request['nocp']}&amp;do=paymentmethod\" method=\"post\">
") : ("")) . "
<div class=\"maintitle\">{$this->lang->words['s_available_subs']}</div>
<div class=\"ipsBox\">
	<div class=\"ipsBox_container\">
		" . ((is_array( $newRows ) && count( $newRows )) ? ("
			<table class=\"ipb_table\">
				<tr class=\"header\">
					<th class=\"col_m_photo\">&nbsp;</th>
					<th style=\"width: 1%;\">&nbsp;</th>
					<th style=\"width: 60%;\">{$this->lang->words['s_detail']}</th>
					<th class=\"short\" style=\"width: 23%;\">{$this->lang->words['s_duration']}</th>
					<th class=\"short\" style=\"width: 15%;\">{$this->lang->words['s_cost']}</th>
				</tr>
				".$this->__f__0864ddb45433ca0902f4bc2cbfbb89ae($deadRows,$currRows,$upgradeRows,$newRows,$cur_id,$currency,$currencyOptions,$currencyUrl,$hasRecurringPayments,$canRenew)."			</table>
			<fieldset class=\"submit\">
				<input type=\"submit\" class=\"input_submit\" value=\"{$this->lang->words['s_continue_button']}\" />
			</fieldset>
		") : ("
			<div class=\"no_messages\">{$this->lang->words['index_no_available']}</div>
		")) . "
	</div>
</div>
" . ((is_array( $newRows ) && count( $newRows )) ? ("
	</form>
") : ("")) . "
<br />
<div class=\"maintitle\">{$this->lang->words['s_dead_subs']}</div>
<div class=\"ipsBox\">
	<div class=\"ipsBox_container\">
		" . ((is_array( $deadRows ) && count( $deadRows )) ? ("
			<table class=\"ipb_table\">
				<tr class=\"header\">
					<th class=\"col_m_photo\">&nbsp;</th>
					<th style=\"width: 30%;\">{$this->lang->words['s_detail']}</th>
					<th class=\"short\">{$this->lang->words['s_started']}</th>
					<th class=\"short\">{$this->lang->words['s_end']}</th>
					<th class=\"short\">{$this->lang->words['s_paid']}</th>
					<th class=\"short\">{$this->lang->words['s_status']}</th>
				</tr>
				".$this->__f__605d62921cd9e89be7d09e6b1d409030($deadRows,$currRows,$upgradeRows,$newRows,$cur_id,$currency,$currencyOptions,$currencyUrl,$hasRecurringPayments,$canRenew)."			</table>
		") : ("
			<div class=\"no_messages\">{$this->lang->words['index_no_expired']}</div>
		")) . "
	</div>
</div>
<br />
" . ((( is_array( $upgradeRows ) && count( $upgradeRows ) ) OR ( is_array( $newRows ) && count( $newRows ) )) ? ("
	<form action=\"{$currencyUrl}\" method=\"post\">
		<fieldset class=\"submit\">
			{$this->lang->words['cc_currency_in']} {$currencyOptions} 
			<input type=\"submit\" class=\"input_submit\" value=\"{$this->lang->words['cc_change']}\" />
		</fieldset>
	</form>
") : ("")) . "";
return $IPBHTML;
}


function __f__6d00fa498eaa1d7dd09254a62edc9052($deadRows, $currRows, $upgradeRows, $newRows, $cur_id, $currency, $currencyOptions, $currencyUrl, $hasRecurringPayments=false, $canRenew=false)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $currRows as $r )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					<tr>
						<td class=\"short\">
							<img src=\"{$this->settings['img_url']}/subscriptions/subs_current.png\" alt=\"\" />
						</td>
						<td>
							<strong>{$r['name']}</strong><br />
							<p class=\"desc\">{$r['desc']}</p>
						</td>
						<td class=\"short\">
							{$r['start']}
						</td>
						<td class=\"short\">
							" . (($r['_state'] == 'paid' AND $r['recurring']) ? ("
								{$this->lang->words['subs_next_payment']}&nbsp;
							") : ("")) . "
							{$r['end']}
							" . (($r['renewable']) ? ("
								&nbsp;(<a href=\"{$this->settings['base_url']}app=subscriptions&amp;module=subscriptions&amp;section=paysubs&amp;renew=1&amp;do=paymentmethod&amp;curid=$cur_id\" style=\"color: red;\">{$this->lang->words['subs_renew_now']}</a>)
							") : ("")) . "
							" . (($r['_state'] == 'paid' AND $r['recurring']) ? ("
								<br /><p class=\"desc\">" . sprintf($this->lang->words['subs_auto_pay'], ucwords($r['method'])) . "</p>
							") : ("")) . "
						</td>
						<td class=\"short\">
							{$r['paid']}
						</td>
						<td class=\"short\">
							{$r['state']}
							" . (($r['_cancelButton']) ? ("
								&nbsp;&middot;&nbsp;{$r['_cancelButton']}
							") : ("")) . "
							" . (($r['_state'] == 'canceled' AND $r['recurring']) ? ("
								<br /><p class=\"desc\">{$this->lang->words['subs_active_cancel']}</p>
							") : ("")) . "
						</td>
					</tr>
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__863d8dd03f81fff9a1ba7c7460715d27($deadRows, $currRows, $upgradeRows, $newRows, $cur_id, $currency, $currencyOptions, $currencyUrl, $hasRecurringPayments=false, $canRenew=false)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $upgradeRows as $r )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
						<tr>
							<td class=\"short\">
								<img src=\"{$this->settings['img_url']}/subscriptions/subs_upgrade.png\" alt=\"\" />
							</td>
							<td class=\"short\">
								" . (($hasRecurringPayments) ? ("
									<img src=\"{$this->settings['img_url']}/exclamation.png\" alt=\"\" />
								") : ("
									<input class=\"input_radio\" type=\"radio\" name=\"sub\" value=\"{$r['id']}\" />
								")) . "
							</td>
							<td>
								<strong>{$r['name']}</strong><br />
								<p class=\"desc\">{$r['desc']}</p>
							</td>
							<td class=\"short\">
								{$r['duration']}
							</td>
							<td class=\"short\">
								{$r['cost']}
							</td>
						</tr>
					
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__0864ddb45433ca0902f4bc2cbfbb89ae($deadRows, $currRows, $upgradeRows, $newRows, $cur_id, $currency, $currencyOptions, $currencyUrl, $hasRecurringPayments=false, $canRenew=false)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $newRows as $r )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					<tr>
						<td class=\"short\">
							<img src=\"{$this->settings['img_url']}/subscriptions/subs_new.png\" alt=\"\" />
						</td>
						<td class=\"short\">
							<input class=\"input_radio\" type=\"radio\" name=\"sub\" value=\"{$r['id']}\" />
						</td>
						<td>
							<strong>{$r['name']}</strong><br />
							<p class=\"desc\">{$r['desc']}</p>
						</td>
						<td class=\"short\">
							{$r['duration']}
						</td>
						<td class=\"short\">
							{$r['cost']}
						</td>
					</tr>
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__605d62921cd9e89be7d09e6b1d409030($deadRows, $currRows, $upgradeRows, $newRows, $cur_id, $currency, $currencyOptions, $currencyUrl, $hasRecurringPayments=false, $canRenew=false)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $deadRows as $r )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					<tr>
						<td class=\"short\">
							<img src=\"{$this->settings['img_url']}/subscriptions/subs_expired.png\" alt=\"\" />
						</td>
						<td>
							<strong>{$r['name']}</strong>
						</td>
						<td class=\"short\">
							{$r['start']}
						</td>
						<td class=\"short\">
							{$r['end']}
						</td>
						<td class=\"short\">
							{$r['paid']}
						</td>
						<td class=\"short\">
							{$r['state']}
						</td>
					</tr>
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- paymentMethods --*/
function paymentMethods($sub_chosen, $upgrade, $curid, $currency, $rows) {
$IPBHTML = "";

if ( ! isset( $this->registry->templateStriping['methods'] ) ) {
$this->registry->templateStriping['methods'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "<!--{MSG}-->
" . (($upgrade) ? ("
<div class='message error'>
{$this->lang->words['subs_upgrade_warning']}
</div>
<br />
<div class='message'>
	{$this->lang->words['sc_upgrade_title']}
	<p>{$this->lang->words['sc_upgrade_explain']}</p><br />
	<p>{$this->lang->words['sc_upgrade_string']}</p>
</div>
<br />
") : ("
<div class='message'>
	{$this->lang->words['sc_normal_title']}
	<p>{$this->lang->words['sc_upgrade_explain']}</p><br />
	<p>{$this->lang->words['sc_normal_string']}</p>
</div>
<br />
")) . "
<form action=\"{$this->settings['base_url']}app=subscriptions&amp;module=subscriptions&amp;section=paysubs&amp;nocp={$this->request['nocp']}&amp;upgrade=$upgrade&amp;do=paymentscreen&amp;curid=$curid&amp;sub=$sub_chosen&amp;currency=$currency&amp;renew={$this->request['renew']}\" method=\"post\">             
	<table class='ipb_table'>
		<caption class='maintitle'>{$this->lang->words['sc_available_methods']}</caption>
		<tr class='header'>
			<th class=\"col_m_photo\">&nbsp;</th>
			<th scope='col' width='1%'>&nbsp;</th>
			<th scope='col'>{$this->lang->words['sc_method']}</th>
		</tr>
				".$this->__f__56a150a2a43629e5528a848d0df393ca($sub_chosen,$upgrade,$curid,$currency,$rows)."	</table>
	<div class='moderation_bar rounded  clear'>
		<input class='input_submit' type='submit' value='{$this->lang->words['s_continue_button2']}' />
	</div>
</form>";
return $IPBHTML;
}


function __f__56a150a2a43629e5528a848d0df393ca($sub_chosen, $upgrade, $curid, $currency, $rows)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $rows as $r )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<tr class='" .  IPSLib::next( $this->registry->templateStriping["methods"] ) . "'>
				<td class='short altrow'><img src='{$this->settings['img_url']}/subscriptions/{$r['img']}' /></td>
				<td class='short altrow'><input class='radiobutton' type='radio' name='methodid' value='{$r['mid']}'" . ((!$r['c']) ? (" checked='checked'") : ("")) . " /></td>
				<td><strong>{$r['name']}</strong><div class='desc'>{$r['desc']}</div></td>
			</tr>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- regComplete --*/
function regComplete($currency, $packages) {
$IPBHTML = "";
$IPBHTML .= "<script type=\"text/javascript\" src=\"{$this->settings['public_dir']}js/ips.subscriptions.js\"></script>
<li class=\"ipsField clear\">
	<label class=\"ipsField_title\">{$this->lang->words['subs_select_package']} " . (($this->settings['subsm_enforce']) ? ("<span class=\"ipsForm_required\">*</span>") : ("")) . "</label>
	<p class=\"ipsField_content\">
		" . ((!$this->settings['subsm_enforce']) ? ("
			<input type=\"radio\" name=\"sm__package\" id=\"sm__0\" value=\"0\" class=\"sm__radio\" checked=\"checked\" />
			&nbsp;&nbsp;{$this->lang->words['subsm_none']}<br />
		") : ("")) . "".$this->__f__c8ffb97ccba6ebec042b4c9e9b8b9ed1($currency,$packages)."	</p>
</li>";
return $IPBHTML;
}


function __f__c8ffb97ccba6ebec042b4c9e9b8b9ed1($currency, $packages)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $packages as $package )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<input type=\"radio\" name=\"sm__package\" id=\"sm__{$package['sub_id']}\" class=\"sm__radio\" value=\"{$package['sub_id']}\" />
			&nbsp;&nbsp;<strong>{$package['sub_title']} ({$package['_sub_duration']})</strong> - {$package['_sub_cost']} {$currency['subcurrency_code']}<br />
			<span class=\"desc\" style=\"padding-left: 25px;\">{$package['sub_desc']}</span><br />
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- regForm --*/
function regForm($currency, $packages) {
$IPBHTML = "";
$IPBHTML .= "<script type=\"text/javascript\" src=\"{$this->settings['public_dir']}js/ips.subscriptions.js\"></script>
<fieldset>
	<ul class=\"ipsForm ipsForm_horizontal\">
		<li class=\"ipsField\">
			<label for=\"sm__package\" class=\"ipsField_title\"><span data-tooltip=\"{$this->lang->words['subs_select_package']}\">{$this->lang->words['subsm_title']}</span> " . (($this->settings['subsm_enforce']) ? ("<span class='ipsForm_required'>*</span>") : ("")) . "</label>
			<p class=\"ipsField_content\">
				" . ((! $this->settings['subsm_enforce']) ? ("
					<input type=\"radio\" name=\"sm__package\" id=\"sm__0\" value=\"0\" class=\"sm__radio\" checked=\"checked\" />
					<label for=\"sm__0\">&nbsp;&nbsp;<em>{$this->lang->words['subsm_none']}</em></label><br /><br />
				") : ("")) . "".$this->__f__b96ce1a150581714e69d96c31d882325($currency,$packages)."			</p>
		</li>
	</ul>
</fieldset>";
return $IPBHTML;
}


function __f__b96ce1a150581714e69d96c31d882325($currency, $packages)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $packages as $package )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					<input type=\"radio\" name=\"sm__package\" id=\"sm__{$package['sub_id']}\" class=\"sm__radio\" value=\"{$package['sub_id']}\" />
					<label for=\"sm__{$package['sub_id']}\">&nbsp;&nbsp;<strong>{$package['sub_title']} ({$package['_sub_duration']})</strong> - {$package['_sub_cost']} {$currency['subcurrency_code']}</label><br />
					<span class=\"desc\" style=\"padding-left:25px\">{$package['sub_desc']}</span><br />
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- show_ticket --*/
function show_ticket($sub="",$id="",$paid="",$extra="") {
$IPBHTML = "";
$IPBHTML .= "<table class='ipb_table'>
	<caption class='maintitle'>{$this->lang->words['man_title']}</caption>
	<tr>
		<td class='row2'>{$this->lang->words['man_mem']}</td>
		<td class='row1'>{$this->memberData['members_display_name']}</td>
	</tr>
	<tr>
		<td class='row2'>{$this->lang->words['man_mem_id']}</td>
		<td class='row1'>{$this->memberData['member_id']}</td>
	</tr>
	<tr>
		<td class='row2'>{$this->lang->words['man_email']}</td>
		<td class='row1'>{$this->memberData['email']}</td>
	</tr>
	<tr>
		<td class='row2'>{$this->lang->words['man_trans_id']}</td>
		<td class='row1'>{$id}</td>
	</tr>
	<tr>
		<td class='row2'>{$this->lang->words['man_sub']}</td>
		<td class='row1'>{$sub['sub_title']} $extra</td>
	</tr>
	<tr>
		<td class='row2'>{$this->lang->words['man_pay']}</td>
		<td class='row1'>{$paid}</td>
	</tr>
</table>";
return $IPBHTML;
}

/* -- sub_msg_force --*/
function sub_msg_force() {
$IPBHTML = "";
$IPBHTML .= "<div class=\"message error\">
	<h4>{$this->lang->words['msg_force_title']}</h4>
	<p>
		{$this->lang->words['msg_force_text']}
" . (($this->request['do'] == 'paymentmethod') ? ("
<br /><br />
		<div>
			<div class='row2'><input type=\"button\" class=\"input_submit alt\" value=\"&lt; &lt; {$this->lang->words['choose_another_pkg']}\" onclick=\"window.location='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=subscriptions&amp;section=paysubs&amp;msgtype=general&amp;nocp={$this->request['nocp']}", "publicWithApp",'' ), "", "" ) . "';\" /></div>
		</div>
") : ("")) . "
		</p>
	</div>
<br />";
return $IPBHTML;
}

/* -- sub_msg_fromreg --*/
function sub_msg_fromreg() {
$IPBHTML = "";
$IPBHTML .= "<div class='borderwrap'>
 <div class='maintitle'>{$this->lang->words['msg_reg_title']}</div>
	<div class=\"row1\" style='padding:10px;'>
		{$this->lang->words['msg_reg_text']}
			<br /><br />
		<div align='center'>
			<input type=\"button\" class=\"input_submit alt\" value=\"&lt; &lt; {$this->lang->words['choose_another_pkg']}\" onclick=\"window.location='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=subscriptions&section=paysubs&msgtype=general", "publicWithApp",'' ), "", "" ) . "';\" />
" . (($this->settings['subsm_enforce'] != 1) ? ("
&nbsp; &nbsp;<input type=\"button\" class=\"input_submit alt\" value=\"{$this->lang->words['cancel_purchase']} &gt; &gt;\" onclick=\"window.location='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=subscriptions&section=paysubs&do=cancelFromReg", "publicWithApp",'' ), "", "" ) . "';\" />
") : ("")) . "
		</div>
	</div>
</div>
<br />";
return $IPBHTML;
}

/* -- sub_msg_general --*/
function sub_msg_general() {
$IPBHTML = "";
$IPBHTML .= "<div class=\"borderwrapm\">
	<div class=\"row1\">
		<b>{$this->lang->words['msg_gen_title']}</b><br /><br />
		{$this->lang->words['msg_gen_text']}<br /><br />
		<div>
" . (($this->settings['subsm_enforce'] != 1) ? ("
&nbsp; &nbsp;<input type=\"button\" class=\"input_submit alt\" value=\"{$this->lang->words['cancel_purchase']} &gt; &gt;\" onclick=\"window.location='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=subscriptions&section=paysubs&do=cancelFromReg", "publicWithApp",'' ), "", "" ) . "';\" />
") : ("")) . "
		</div>
	</div>
</div>
<br />";
return $IPBHTML;
}

/* -- testPaymentScreen --*/
function testPaymentScreen($accept) {
$IPBHTML = "";
$IPBHTML .= "<div class='message unspecific'>
This is just a test payment gateway. No money will be taken.
</div>
<br />
<form action=\"{$this->request['responderurl']}\" method=\"POST\">".$this->__f__d10db0322ebdc572dd1e793abcefb5b4($accept)."<table class='ipb_table'>
	<caption class='maintitle'>Data passed</caption>
	".$this->__f__87304143eb411916bf6af3188a883462($accept)."</table>
<div class='moderation_bar rounded  clear'>
	<input class='button' type=\"submit\" value=\"Pay Now\" />
</div>
</form>";
return $IPBHTML;
}


function __f__d10db0322ebdc572dd1e793abcefb5b4($accept)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $accept as $field )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
	<input type='hidden' name='test__{$field}' value=\"{$this->request[ $field ]}\" />

";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__87304143eb411916bf6af3188a883462($accept)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $accept as $field )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
		<tr>
			<td class='row2'>$field</td>
			<td class='row1'>{$this->request[ $field ]}</td>
		</tr>
	
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}


}


/*--------------------------------------------------*/
/* END OF FILE                                      */
/*--------------------------------------------------*/

?>