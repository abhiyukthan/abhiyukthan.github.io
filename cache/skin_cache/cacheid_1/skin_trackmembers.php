<?php
/*--------------------------------------------------*/
/* FILE GENERATED BY INVISION POWER BOARD 3         */
/* CACHE FILE: Skin set id: 1               */
/* CACHE FILE: Generated: Tue, 05 Jan 2016 20:03:54 GMT */
/* DO NOT EDIT DIRECTLY - THE CHANGES WILL NOT BE   */
/* WRITTEN TO THE DATABASE AUTOMATICALLY            */
/*--------------------------------------------------*/

class skin_trackmembers_1 extends skinMaster{

/**
* Construct
*/
function __construct( ipsRegistry $registry )
{
	parent::__construct( $registry );
	

$this->_funcHooks = array();
$this->_funcHooks['showSetupPopup'] = array('isLargeTouch');
$this->_funcHooks['trackMemberLogs'] = array('warnClickable','warnPopup','warnIsSet','warnsLoop','logs','hasVariable','hasWarns','userStatus','logs');


}

/* -- showProfileStuff --*/
function showProfileStuff($member) {
$IPBHTML = "";
$IPBHTML .= "<div class='general_box clearfix'>
	<h3>{$this->lang->words['track_members']}</h3>
	<ul class='ipsPad'>	
		" . (($member['member_tracked'] == 0) ? ("
			<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=trackmembers&amp;module=core&amp;section=trackmembers&amp;do=track&amp;mid={$member['member_id']}", "public",'' ), "{$member['members_seo_name']}", "false" ) . "'><img src=\"{$this->settings['public_dir']}style_extra/trackmembers/track.png\"> {$this->lang->words['track_this_member']}</a></li>
		") : ("
			<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=trackmembers&amp;module=core&amp;section=trackmembers&amp;mid={$member['member_id']}", "public",'' ), "{$member['members_seo_name']}", "false" ) . "'><img src=\"{$this->settings['public_dir']}style_extra/trackmembers/logs.png\"> {$this->lang->words['track_view_logs']}</a></li>
			<li><a id='showSetupPopup' href='#'><img src=\"{$this->settings['public_dir']}style_extra/trackmembers/settings.png\"> {$this->lang->words['track_change_settings']}</a></li>
			<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=trackmembers&amp;module=core&amp;section=trackmembers&amp;do=untrack&amp;mid={$member['member_id']}", "public",'' ), "{$member['members_seo_name']}", "false" ) . "'><img src=\"{$this->settings['public_dir']}style_extra/trackmembers/stoptrack.png\"> {$this->lang->words['track_stop_tracking']}</a></li>											
		")) . "
	</ul>
</div>
<script type='text/javascript'>
	var trackmemberpopup = null;
	$( 'showSetupPopup' ).observe( 'click', function( e )
	{
		var _url = ipb.vars['base_url'] + 'app=trackmembers&module=ajax&section=setup&mid={$member['member_id']}&secure_key=' + ipb.vars['secure_hash'];
		
		trackmemberpopup = new ipb.Popup( 'trackMemberSetup', 
		{ 
			type: 'modal',
			ajaxURL: _url,
			hideAtStart: false,
			w: '600px',
			h: 640 
		});
	});
</script>";
return $IPBHTML;
}

/* -- showSetupPopup --*/
function showSetupPopup($memberData, $formElements, $formData) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_trackmembers', $this->_funcHooks['showSetupPopup'] ) )
{
$count_a9647eab578941a36279afc906cfe78a = is_array($this->functionData['showSetupPopup']) ? count($this->functionData['showSetupPopup']) : 0;
$this->functionData['showSetupPopup'][$count_a9647eab578941a36279afc906cfe78a]['memberData'] = $memberData;
$this->functionData['showSetupPopup'][$count_a9647eab578941a36279afc906cfe78a]['formElements'] = $formElements;
$this->functionData['showSetupPopup'][$count_a9647eab578941a36279afc906cfe78a]['formData'] = $formData;
}

//debug( $formElements );
$IPBHTML .= "<h3>Tracking setup for '{$memberData['members_display_name']}'</h3>
<div class='fixed_inner ipsBox'>
	" . (($this->registry->output->isLargeTouchDevice()) ? ("
		<div class='message' style='margin-bottom: 5px;'>{$this->lang->words['scroll_tip']}</div>
	") : ("")) . "
		<div class='ipsBox_container general_box'>
		<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=trackmembers&module=ajax&section=setup&mid={$memberData['member_id']}&do=save", "public",'' ), "", "" ) . "\" method='post' id='trackMembersSetupForm'>
			".$this->__f__6c7065f66630c19a45ca719b695a3020($memberData,$formElements,$formData)."			<fieldset class='submit clear'>
				<input type='hidden' name='secure_key' value='{$this->member->form_hash}' />
				<input type='submit' value='{$this->lang->words['save']}' class='input_submit' accesskey='s' /> {$this->lang->words['or']} <span class='cancel'>{$this->lang->words['cancel']}</span>
			</fieldset>
		</form>
	</div>
</div>
<script type='text/javascript'>
	$( 'trackMembersSetupForm' ).observe( 'submit', function( e )
	{
		$( 'trackMembersSetupForm' ).request(
		{
			onSuccess: function(t)
			{
				ipb.global.showInlineNotification( 'Tracking settings successfully saved...' );
			}
		});
		Event.stop( e );
		trackmemberpopup.hide();
		
	});
</script>";
return $IPBHTML;
}


function __f__e6c4fa0717f7160a415c7a7b5eb33e3a($memberData, $formElements, $formData,$title='',$data='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $data as $key => $lang )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
							<li class='field checkbox'>
								<input class='input_check' type='checkbox' name='{$key}' id='{$key}' value='1' " . (($formData[ $key ]) ? ("checked='checked'") : ("")) . " <label for=\"{$key}\">{$this->lang->words[ $lang ]}</label>
							</li>
						
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__6c7065f66630c19a45ca719b695a3020($memberData, $formElements, $formData)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $formElements as $title => $data )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
				<fieldset class=\"row1\">
					<h4 class='bar'>{$this->lang->words[ $title ]}</h4>
					<ul class='ipsPad'>
						".$this->__f__e6c4fa0717f7160a415c7a7b5eb33e3a($memberData,$formElements,$formData,$title,$data)."					</ul>
				</fieldset>
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- trackMemberLogs --*/
function trackMemberLogs($logs, $member, $status, $pages, $footer_filter) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_trackmembers', $this->_funcHooks['trackMemberLogs'] ) )
{
$count_37888a1808b4ea7329d6495c0cb9ee79 = is_array($this->functionData['trackMemberLogs']) ? count($this->functionData['trackMemberLogs']) : 0;
$this->functionData['trackMemberLogs'][$count_37888a1808b4ea7329d6495c0cb9ee79]['logs'] = $logs;
$this->functionData['trackMemberLogs'][$count_37888a1808b4ea7329d6495c0cb9ee79]['member'] = $member;
$this->functionData['trackMemberLogs'][$count_37888a1808b4ea7329d6495c0cb9ee79]['status'] = $status;
$this->functionData['trackMemberLogs'][$count_37888a1808b4ea7329d6495c0cb9ee79]['pages'] = $pages;
$this->functionData['trackMemberLogs'][$count_37888a1808b4ea7329d6495c0cb9ee79]['footer_filter'] = $footer_filter;
}

if ( ! isset( $this->registry->templateStriping['logs'] ) ) {
$this->registry->templateStriping['logs'] = array( FALSE, "row1","row2 altrow");
}
$IPBHTML .= "<style>
.track_member{margin-top: 10px;}
</style>
<div class='ipsBox clear vcard' id='profile_background'>
	<div class='ipsLayoutclearfix'>
		<!--<div class='ipsVerticalTabbed_tabs ipsLayout_left' id='profile_tabs'>
			<p class='short photo_holder'>
				<img class=\"ipsUserPhoto\" id='profile_photo' src='{$member['pp_main_photo']}' alt=\"" . sprintf($this->lang->words['users_photo'],$member['members_display_name']) . "\"  />
			</p>
			" . (($member['show_warn']) ? ("
				<div class='warn_panel clear ipsType_small'>
					<strong><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=warnings&amp;member={$member['member_id']}&amp;from_app=members", "public",'' ), "", "" ) . "' id='warn_link_xxx_{$member['member_id']}' title='{$this->lang->words['warn_view_history']}'>" . sprintf( $this->lang->words['warn_status'], $member['warn_level'] ) . "</a></strong>
				</div>
			") : ("")) . "
		</div>-->
		<div class='ipsBox_container' id='profile_content'>
			<div class='ipsPad'>
				<div id='profile_content_main'>
					" . (($this->settings['member_topic_avatar_max']) ? ("	
						<img itemprop=\"image\" src='{$member['pp_main_photo']}' class='ipsUserPhoto ipsUserPhoto_variable' style='float: left; position: relative; max-width: 120px;' />
					") : ("
						<img itemprop=\"image\" src='{$member['pp_thumb_photo']}' class='ipsUserPhoto ipsUserPhoto_large' style='float: left; position: relative; max-width: 120px;' />
					")) . "
					<div id='user_info_cell' style='padding-left: 10px;'>
						<h1 class='ipsType_pagetitle'>
							<span class='fn nickname'>{$member['members_display_name']}</span>
						</h1>
						{$this->lang->words['m_member_since']} " . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($member['joined'],"DATE", 0)) . "<br />
						" . ((!empty( $warns )) ? ("
							".$this->__f__b5f0ad39ca761f1da08d873209d2af98($logs,$member,$status,$pages,$footer_filter)."						") : ("")) . "
						" . (($member['_online']) ? ("
							<span class='ipsBadge ipsBadge_green reset_cursor' data-tooltip=\"" . strip_tags($member['online_extra']) . "\">{$this->lang->words['online_online']}</span>
						") : ("
							<span class='ipsBadge ipsBadge_lightgrey reset_cursor'>{$this->lang->words['online_offline']}</span>
						")) . "
						<span class='desc lighter'>{$this->lang->words['m_last_active']} {$member['_last_active']}</span> 
					</div>
                    " . (($status['status_id']) ? ("
                    <div id='user_status_cell'>
                        <div id='user_latest_status'>
                            <div>
                                " . IPSText::truncate( strip_tags( $status['status_content'] ), 180 ) . "
                                <span class='ipsType_smaller desc lighter blend_links'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=status&amp;type=single&amp;status_id={$status['status_id']}", "public",'' ), "true", "members_status_single" ) . "'>{$this->lang->words['ps_updated']} " . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($status['status_date'],"manual{%d %b}", 0)) . " &middot; " . intval($status['status_replies']) . " {$this->lang->words['ps_comments']}</a></span>
                            </div>
                        </div>
                    </div>
                    ") : ("")) . "
				</div>
			</div>
		</div>
		<br />
		<div class='ipsBox_container track_member' id='logs'>
			<div class='ipsPad'>
				<div class='ipsFilterbar maintitle'>				
					<ul class='ipsList_inline ipsType_small'>
						<li " . (($this->request['sort_key'] == 'date' and $this->request['sort_by'] == 'Z-A') ? ("class='active'") : ("")) . "><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=trackmembers&module=core&section=trackmembers&mid={$member['member_id']}&amp;sort_key=date&amp;sort_by=Z-A", "public",'' ), "", "" ) . "' rel='nofollow'>Date</a></li>
						<li " . (($this->request['sort_key'] == 'app' and $this->request['sort_by'] == 'A-Z') ? ("class='active'") : ("")) . "><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=trackmembers&module=core&section=trackmembers&mid={$member['member_id']}&amp;sort_key=app&amp;sort_by=A-Z", "public",'' ), "", "" ) . "' rel='nofollow'>Action</a></li>
						<li><a href='#log_filter_menucontent' id='log_filter'>Custom <img src=\"{$this->settings['img_url']}/useropts_arrow.png\" /></a></li>
					</ul>
				</div>
				<div id='log_filter_menucontent' class='ipbmenu_content ipsPad' style='display: none'>
					<form id='filter_form' action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=trackmembers&module=core&section=trackmembers&mid={$member['member_id']}&amp;changefilters=1", "public",'' ), "", "" ) . "\" method=\"post\">
						<strong>{$this->lang->words['show_log_type']}</strong><br />
						<select name=\"logfilter\" id='log_filter' class='input_select'>{$footer_filter['topic_filter']}</select>
						<br /><br />
						
						<strong>{$this->lang->words['filter_sort']}</strong><br />
						<select name=\"sort_key\" id='sort_by' class='input_select'>{$footer_filter['sort_by']}</select>
						<br /><br />
						
						<strong>{$this->lang->words['filter_direction']}</strong><br />
						<select name=\"sort_order\" id='direction' class='input_select'>{$footer_filter['sort_order']}</select>
						<br /><br />
						
						<input type=\"submit\" value=\"{$this->lang->words['sort_submit']}\" class=\"input_submit\" />
					</form>
				</div>
				<script type='text/javascript'>
					new ipb.Menu( $('log_filter'), $('log_filter_menucontent'), { stopClose: true } );
				</script>
				<table class='ipb_table'>
					<tr class='header'>
						<th scope='col' style='width: 25%'>Date</th>
						<th scope='col' style='width: 55%'>Description</th>
						<th scope='col' style='width: 20%'>Action</th>
					</tr>
					" . ((is_array( $logs ) AND count( $logs )) ? ("
												".$this->__f__2712bbb1800d68c59de18cc6fc4bf336($logs,$member,$status,$pages,$footer_filter)."					") : ("
						<tr>
							<td colspan=\"6\"><em>{$this->lang->words['track_nologs']}</em></td>
						</tr>
					")) . "
				</table>
			</div>
			<div class='topic_controls clear ipsPad'>
				{$pages}
			</div>
		</div>
	</div>
</div>";
return $IPBHTML;
}


function __f__b5f0ad39ca761f1da08d873209d2af98($logs, $member, $status, $pages, $footer_filter)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( array( 'ban', 'suspend', 'rpa', 'mq' ) as $k )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
								" . ((isset( $warns[ $k ] )) ? ("<span class='ipsBadge ipsBadge_red" . (($warns[ $k ]) ? (" clickable") : ("")) . "' " . (($warns[ $k ]) ? ("onclick='warningPopup( this, {$warns[ $k ]} )'") : ("")) . ">{$this->lang->words[ 'warnings_profile_badge_' . $k ]}</span>") : ("")) . "
							
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__2712bbb1800d68c59de18cc6fc4bf336($logs, $member, $status, $pages, $footer_filter)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $logs as $mid => $r )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
							<tr class='" .  IPSLib::next( $this->registry->templateStriping["logs"] ) . "'>
								<td>" . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($r['date'],"SHORT", 0)) . "</td>
								<td>{$r['description']}</td>
								<td align='center'>{$r['app']}</td>
							</tr>
						
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}


}


/*--------------------------------------------------*/
/* END OF FILE                                      */
/*--------------------------------------------------*/

?>