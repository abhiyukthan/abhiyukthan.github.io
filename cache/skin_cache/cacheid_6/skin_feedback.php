<?php
/*--------------------------------------------------*/
/* FILE GENERATED BY INVISION POWER BOARD 3         */
/* CACHE FILE: Skin set id: 6               */
/* CACHE FILE: Generated: Tue, 17 May 2016 20:43:23 GMT */
/* DO NOT EDIT DIRECTLY - THE CHANGES WILL NOT BE   */
/* WRITTEN TO THE DATABASE AUTOMATICALLY            */
/*--------------------------------------------------*/

class skin_feedback_6 extends skinMaster{

/**
* Construct
*/
function __construct( ipsRegistry $registry )
{
	parent::__construct( $registry );
	

$this->_funcHooks = array();
$this->_funcHooks['feedbackIndex'] = array('feedbackLoop');
$this->_funcHooks['profilePage'] = array('feedbackLoop','filterplace','filteradded','filterplace','filteradded','filteradded');
$this->_funcHooks['userList'] = array('addfriend','notus','rate1','rate2','rate3','rate4','rate5','rating','norep','posrep','negrep','repson');


}

/* -- deleteFeedback --*/
function deleteFeedback($feedback, $member) {
$IPBHTML = "";
$IPBHTML .= "<h1 class=\"ipsType_pagetitle\">{$this->lang->words['confirm_delete_title']}</h1>
<div class='ipsBox'>
	<form id='leaveFeedback' name='leaveFeedback' enctype='multipart/form-data' method=\"post\" action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=feedback&amp;module=view&amp;action=delete&amp;do={$feedback['id']}&amp;confirm=1", "public",'' ), "", "" ) . "\">
		<div class='ipsBox_container ipsPad'>
			<p class='message error'>{$this->lang->words['confirm_delete_text']}</p>
		</div>
		<fieldset class=\"submit\">
			<input class=\"input_submit\" value=\"{$this->lang->words['delete']}\" type=\"submit\"> or <a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$member['member_id']}&amp;tab=feedback", "public",'' ), "{$member['members_seo_name']}", "showuser" ) . "\" title=\"\" class=\"cancel\">{$this->lang->words['fb_cancel']}</a>
		</fieldset>
	</form>
</div>";
return $IPBHTML;
}

/* -- feedbackIndex --*/
function feedbackIndex($feedback, $users, $icons, $stats, $pages, $moderate) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_feedback', $this->_funcHooks['feedbackIndex'] ) )
{
$count_3a74d26ec5c63b9f0d83d9281feeb1a0 = is_array($this->functionData['feedbackIndex']) ? count($this->functionData['feedbackIndex']) : 0;
$this->functionData['feedbackIndex'][$count_3a74d26ec5c63b9f0d83d9281feeb1a0]['feedback'] = $feedback;
$this->functionData['feedbackIndex'][$count_3a74d26ec5c63b9f0d83d9281feeb1a0]['users'] = $users;
$this->functionData['feedbackIndex'][$count_3a74d26ec5c63b9f0d83d9281feeb1a0]['icons'] = $icons;
$this->functionData['feedbackIndex'][$count_3a74d26ec5c63b9f0d83d9281feeb1a0]['stats'] = $stats;
$this->functionData['feedbackIndex'][$count_3a74d26ec5c63b9f0d83d9281feeb1a0]['pages'] = $pages;
$this->functionData['feedbackIndex'][$count_3a74d26ec5c63b9f0d83d9281feeb1a0]['moderate'] = $moderate;
}
$IPBHTML .= "<script type='text/javascript'>
document.observe(\"dom:loaded\", function(){
	url = ipb.vars['base_url'] + 'app=core&module=ajax&section=findnames&do=get-member-names&secure_key=' + ipb.vars['secure_hash'] + '&name=';
	autoComplete = new ipb.Autocomplete( $('username'), { multibox: false, url: url, templates: { wrap: ipb.templates['autocomplete_wrap'], item: ipb.templates['autocomplete_item'] }} );
});
</script>
<div class='ipsLayout ipsLayout_withright ipsLayout_largeright clearfix'>
	<div class='ipsLayout_right'>
		<div class='ipsSideBlock clearfix'>
			<h3>{$this->lang->words['find_member']}</h3>
			<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=feedback&amp;module=view&amp;action=find-member", "public",'' ), "a", "feedbackFind" ) . "\" method=\"post\">
				<fieldset>
				<ul>
					<li class=\"field\">
						<input class='input_text' id='username' name=\"username\" size=\"20\" type=\"text\">
						&nbsp;
						<input class=\"input_submit\" value=\"{$this->lang->words['search']}\" type=\"submit\">
					</li>
				</ul>
				</fieldset>
			</form>
		</div>
		" . (($stats['global']['total'] > 0 ) ? ("<div class='ipsSideBlock clearfix'>
			<h3>{$this->lang->words['fb_statistics_title']}</h3>
			<ul id='feedbackStats'>
				<li><strong>{$this->lang->words['totalpos']}:</strong> <span class='right clearfix value positive ipsType_small'>{$stats['global']['positive']}</span></li>
				<li><strong>{$this->lang->words['totalneut']}:</strong> <span class='right clearfix value ipsType_small'>{$stats['global']['neutral']}</span></li>
				<li><strong>{$this->lang->words['totalneg']}:</strong> <span class='right clearfix value negative ipsType_small'>{$stats['global']['negative']}</span></li>
				<li><strong>{$this->lang->words['totalpercent']}:</strong> <span class='right clearfix value " . (($stats['global']['percent'] > 99) ? ("positive") : ("" . (($stats['global']['percent'] < 0 ) ? ("neutral") : ("" . (($stats['global']['percent'] < 40 ) ? ("negative") : ("")) . "")) . "")) . "'>{$stats['global']['percent']}%</span></li>
			</ul>
		</div>") : ("")) . "" . ( method_exists( $this->registry->getClass('output')->getTemplate('feedback'), 'topMembers' ) ? $this->registry->getClass('output')->getTemplate('feedback')->topMembers($stats['top_members']) : '' ) . "
	</div>
	<div class='ipsLayout_content'>
		<h3 class='maintitle clear'>{$this->lang->words['latest_feedback']}</h3>
		<div class='ipsBox'>
			<div class='ipsBox_container'>
				<table class='ipb_table'>
					<tr class='header'>
						<th scope=\"col\" width='100'>{$this->lang->words['col_feedback_for']}</th>
						<th scope=\"col\" width='80'>{$this->lang->words['col_feedback_date']}</th>
						<th scope=\"col\" width='35'>{$this->lang->words['col_feedback_rating']}</th>
						<th scope=\"col\">{$this->lang->words['col_feedback_comment']}</th>
						<th scope=\"col\" width='150'>{$this->lang->words['col_feedback_from']}</th>
						" . (($moderate) ? ("
							<th scope=\"col\" width='35'>&nbsp;</th>
						") : ("")) . "
					</tr>
				" . ((count($feedback)) ? ("".$this->__f__86f6aba6f2dc8e9018f3de3f7fe33780($feedback,$users,$icons,$stats,$pages,$moderate)."				") : ("<tr>
						<td colspan='" . (($moderate) ? ("6") : ("5")) . "'>
							{$this->lang->words['fb_no_feedback']}
						</td>
					</tr>")) . "
				</table>
			</div>
		</div>
		{$pages}
	</div>
</div>";
return $IPBHTML;
}


function __f__86f6aba6f2dc8e9018f3de3f7fe33780($feedback, $users, $icons, $stats, $pages, $moderate)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $feedback as $f )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					<tr>
						<td><a hovercard-ref=\"member\" hovercard-id=\"{$f['receiver']}\" class=\"_hovertrigger url fn\" href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$f['receiver']}&amp;tab=feedback", "public",'' ), "{$users[$f['receiver']]['members_seo_name']}", "showuser" ) . "\">{$users[$f['receiver']]['members_display_name']}</a></td>
						<td>" . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($f['date'],"manual{%x}", 0)) . "</td>
						<td align=\"center\"><p class='ipsBadge feedbackBadge_{$f['badge']['colour']}'>{$f['badge']['symbol']}</p></td>
						<td>
						" . (($f['link']) ? ("<a href=\"" . (($f['link_type'] == 'c' && IPSLib::appIsInstalled('classifieds')) ? ("" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=classifieds&amp;module=core&amp;do=view_item&amp;item_id={$f['link']}", "public",'' ), "{$f['c_title_seo']}", "view_item" ) . "
							") : ("" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$f['link']}", "public",'' ), "{$f['title_seo']}", "showtopic" ) . "
							")) . "\" title='{$this->lang->words['go_to_forum']}'>") : ("")) . "{$f['note']}" . (($f['link']) ? ("</a>
						") : ("")) . "
						</td>
						<td>{$f['type']}: <a hovercard-ref=\"member\" hovercard-id=\"{$f['sender']}\" class=\"_hovertrigger url fn\" href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$f['sender']}&amp;tab=feedback", "public",'' ), "{$users[$f['sender']]['members_seo_name']}", "showuser" ) . "\">{$users[$f['sender']]['members_display_name']}</a></td>
						" . (($moderate) ? ("
							<td align=\"center\">
								<ul class='ipsList_inline right'>
									<li>
										<a class=\"ipsButton_secondary\" href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=feedback&amp;module=view&amp;action=delete&amp;do={$f['id']}", "public",'' ), "", "" ) . "\"><img src=\"{$this->settings['img_url']}/feedback/delete.png\" alt=\"Delete\"></a>
									</li>
								</ul>
							</td>
						") : ("")) . "
					</tr>
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- leave --*/
function leave($user, $optional, $captcha='', $error=FALSE) {
$IPBHTML = "";
$IPBHTML .= "<h1 class=\"ipsType_pagetitle\">{$this->lang->words['leave']} {$user['members_display_name']}</h1>
" . (($error) ? ("
	<p class='message error'>{$error}</p><br />
") : ("")) . "
<div class='ipsBox'>
	<form id='leaveFeedback' name='leaveFeedback' enctype='multipart/form-data' method=\"post\" action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=feedback&amp;module=view&amp;action=leave&amp;do={$user['member_id']}", "public",'' ), "{$user['members_seo_name']}", "feedbackLeave" ) . "\">
		<div class='ipsBox_container ipsPad'>
			<ul class='ipsForm ipsForm_horizontal ipsPad'>
				<li class='ipsField ipsField_primary'>
					<label for='role' class='ipsField_title'>{$this->lang->words['role']} <span class=\"ipsForm_required\">*</span></label>
					<p class='ipsField_content'>
						<select id=\"role\" class=\"input_text\" name=\"role\">
							<option value=\"0\" " . ((isset($this->request['role']) &&$this->request['role'] == 0) ? ("selected=\"selected\"") : ("")) . ">{$this->lang->words['buyer']}</option>
							<option value=\"1\" " . (($this->request['role'] == 1) ? ("selected=\"selected\"") : ("")) . ">{$this->lang->words['seller']}</option>
							<option value=\"2\" " . (($this->request['role'] == 2) ? ("selected=\"selected\"") : ("")) . ">{$this->lang->words['trader']}</option>
						</select>
						<br/><span class=\"desc\">{$this->lang->words['role_desc']}</span>
					</p>
				</li>
				<li class='ipsField ipsField_primary'>
					<label for='leaving' class='ipsField_title'>{$this->lang->words['leaving']} <span class=\"ipsForm_required\">*</span></label>
					<p class='ipsField_content'>
						<select id=\"leaving\" class=\"input_text\" name=\"leaving\">
							<option value=\"2\" " . (($this->request['leaving'] == 2) ? ("selected=\"selected\"") : ("")) . ">{$this->lang->words['pos']} (+1)</option>
							<option value=\"1\" " . (($this->request['leaving'] == 1) ? ("selected=\"selected\"") : ("")) . ">{$this->lang->words['neut']} (0)</option>
							<option value=\"0\" " . ((isset($this->request['leaving']) && $this->request['leaving'] == 0) ? ("selected=\"selected\"") : ("")) . ">{$this->lang->words['neg']} (-1)</option>
						</select><br />
						<span class=\"desc\">{$this->lang->words['leaving_desc']}</span>
					</p>
				</li>
				<li class='ipsField ipsField_primary'>
					<label for='topic_url' class='ipsField_title'>" . (($this->settings['fb_linkType'] == 'c' && IPSLib::appIsInstalled('classifieds')) ? ("{$this->lang->words['classified']}") : ("{$this->lang->words['topic']}")) . "" . (($optional) ? (" (<em>{$this->lang->words['optional']}</em>)") : (" <span class=\"ipsForm_required\">*</span>")) . "</label>
					<p class='ipsField_content'>
						<input class=\"input_text\" id=\"topic_url\" size=\"55\" maxlength=\"255\" name=\"topic_url\" type=\"text\" " . ((isset($this->request['topic_url'])) ? ("value=\"{$this->request['topic_url']}\"") : ("")) . "/><br/>
						<span class=\"desc\">" . (($this->settings['fb_linkType'] == 'c' && IPSLib::appIsInstalled('classifieds')) ? ("{$this->lang->words['classified_desc']}") : ("{$this->lang->words['topic_desc']}")) . "</span>
					</p>
				</li>
				<li class='ipsField ipsField_primary'>
					<label for='comment' class='ipsField_title'>{$this->lang->words['comment']} <span class=\"ipsForm_required\">*</span></label>
					<p class='ipsField_content'>
						<input id=\"comment\" class=\"input_text\" size=\"55\" maxlength=\"80\" name=\"comment\" type=\"text\"  " . ((isset($this->request['comment'])) ? ("value=\"{$this->request['comment']}\"") : ("")) . "/><br>
						<span class=\"desc\">{$this->lang->words['comment_desc']}</span>
					</p>
				</li>
				" . (($this->settings['fb_enableCaptcha']) ? ("
				<li class='ipsField ipsField_primary'>
					{$captcha}
				</li>
				") : ("")) . "
			</ul>
		</div>
		<fieldset class=\"submit\">
			<input class=\"input_submit\" value=\"{$this->lang->words['leave_title']}\" type=\"submit\"> or <a href=\"{$this->registry->output->buildUrl('app=feedback&u='.$user['member_id'])}\" title=\"\" class=\"cancel\">{$this->lang->words['fb_cancel']}</a>
		</fieldset>
	</form>
</div>";
return $IPBHTML;
}

/* -- noResult --*/
function noResult() {
$IPBHTML = "";
$IPBHTML .= "<div class='message error'>{$this->lang->words['fb_nouser']}</div>";
return $IPBHTML;
}

/* -- profilePage --*/
function profilePage($member, $feedback, $users, $pages, $moderate) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_feedback', $this->_funcHooks['profilePage'] ) )
{
$count_e43ee85eb2450e0c84245ab3bd18e58d = is_array($this->functionData['profilePage']) ? count($this->functionData['profilePage']) : 0;
$this->functionData['profilePage'][$count_e43ee85eb2450e0c84245ab3bd18e58d]['member'] = $member;
$this->functionData['profilePage'][$count_e43ee85eb2450e0c84245ab3bd18e58d]['feedback'] = $feedback;
$this->functionData['profilePage'][$count_e43ee85eb2450e0c84245ab3bd18e58d]['users'] = $users;
$this->functionData['profilePage'][$count_e43ee85eb2450e0c84245ab3bd18e58d]['pages'] = $pages;
$this->functionData['profilePage'][$count_e43ee85eb2450e0c84245ab3bd18e58d]['moderate'] = $moderate;
}
$IPBHTML .= "<ul class=\"ipsType_small ipsList_inline fbkProfStat\">
	<li class=\"clear\">
		<span class=\"value positive\">{$member['feedb_pos']}</span>
		{$this->lang->words['totalpos']}
	</li>
	<li class=\"clear\">
		<span class=\"value\">{$member['feedb_neu']}</span>
		{$this->lang->words['totalneut']}
	</li>
	<li class=\"clear\">
		<span class=\"value negative\">{$member['feedb_neg']}</span>
		{$this->lang->words['totalneg']}
	</li>
	<li class=\"clear\">
		<span class=\"value " . (($member['feedb_percent'] > 99) ? ("positive") : ("" . (($member['feedb_percent'] < 0 ) ? ("neutral") : ("" . (($member['feedb_percent'] < 40 ) ? ("negative") : ("")) . "")) . "")) . "\">" . (($member['feedb_percent']<0) ? ("{$this->lang->words['fb_na']}") : ("{$member['feedb_percent']}%")) . "</span>
		{$this->lang->words['totalpercent']}
	</li>
</ul>
<div class=\"maintitle ipsFilterbar clear clearfix\">
	<ul class='ipsList_inline left'>
		<li " . (($this->request['filter'] == 'all' || !$this->request['filter']) ? ("class='active'") : ("")) . ">
			<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$member['member_id']}&amp;tab=feedback", "public",'' ), "{$member['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['taball']}'>{$this->lang->words['taball']}</a>
		</li>
		<li " . (($this->request['filter'] == 'buyer') ? ("class='active'") : ("")) . ">
			<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$member['member_id']}&amp;tab=feedback&amp;filter=buyer", "public",'' ), "{$member['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['tabbuyer']}'>{$this->lang->words['tabbuyer']}</a>
		</li>
		<li " . (($this->request['filter'] == 'seller') ? ("class='active'") : ("")) . ">
			<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$member['member_id']}&amp;tab=feedback&amp;filter=seller", "public",'' ), "{$member['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['tabseller']}'>{$this->lang->words['tabseller']}</a>
		</li>
		<li " . (($this->request['filter'] == 'swap') ? ("class='active'") : ("")) . ">
			<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$member['member_id']}&amp;tab=feedback&amp;filter=swap", "public",'' ), "{$member['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['tabtrader']}'>{$this->lang->words['tabtrader']}</a>
		</li>
		<li " . (($this->request['filter'] == 'others') ? ("class='active'") : ("")) . ">
			<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$member['member_id']}&amp;tab=feedback&amp;filter=others", "public",'' ), "{$member['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['tabothers']}'>{$this->lang->words['tabothers']}</a>
		</li>
	</ul>
</div>
<div class='ipsBox'>
	<div class='ipsBox_container'>
		<table class='ipb_table'>
			<tr class='header'>
				<th scope=\"col\" width='35'>{$this->lang->words['col_feedback_rating']}</th>
				<th scope=\"col\" width='150'>{$this->lang->words['col_feedback_date']}</th>
				<th scope=\"col\">{$this->lang->words['col_feedback_comment']}</th>
				<th scope=\"col\" width='150'>" . (($this->request['filter'] == 'others') ? ("{$this->lang->words['col_feedback_for']}") : ("{$this->lang->words['col_feedback_from']}")) . "</th>
				" . (($moderate) ? ("
					<th scope=\"col\" width='35'>&nbsp;</th>
				") : ("")) . "
			</tr>
		" . ((count($feedback)) ? ("".$this->__f__ccd93c33726001a6ba0a500f3430833d($member,$feedback,$users,$pages,$moderate)."		") : ("
			<tr>
				<td colspan='4'>{$this->lang->words['noneyet']}</td>
			</tr>
		")) . "
		</table>
	</div>
</div>
{$pages}";
return $IPBHTML;
}


function __f__ccd93c33726001a6ba0a500f3430833d($member, $feedback, $users, $pages, $moderate)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $feedback as $f )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<tr>
				<td align=\"center\"><p class='ipsBadge feedbackBadge_{$f['badge']['colour']}'>{$f['badge']['symbol']}</p></td>
				<td>" . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($f['date'],"short", 0)) . "</td>
				<td>
					" . (($f['link']) ? ("<a href=\"" . (($f['link_type'] == 'c' && IPSLib::appIsInstalled('classifieds')) ? ("" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=classifieds&amp;module=core&amp;do=view_item&amp;item_id={$f['link']}", "public",'' ), "{$f['c_title_seo']}", "view_item" ) . "
						") : ("" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$f['link']}", "public",'' ), "{$f['title_seo']}", "showtopic" ) . "
						")) . "\" title='{$this->lang->words['go_to_forum']}'>") : ("")) . "{$f['note']}" . (($f['link']) ? ("</a>
					") : ("")) . "
				</td>
				<td>{$f['type']}: <a hovercard-ref=\"member\" hovercard-id=\"{$f['sender']}\" class=\"_hovertrigger url fn\" href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$f['sender']}&amp;tab=feedback", "public",'' ), "{$users[$f['sender']]['members_seo_name']}", "showuser" ) . "\">{$users[$f['sender']]['members_display_name']}</a></td>
				" . (($moderate) ? ("
					<td align=\"center\">
						<ul class='ipsList_inline right'>
							<li>
								<a class=\"ipsButton_secondary\" href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=feedback&amp;module=view&amp;action=delete&amp;do={$f['id']}", "public",'' ), "", "" ) . "\"><img src=\"{$this->settings['img_url']}/feedback/delete.png\" alt=\"Delete\"></a>
							</li>
						</ul>
					</td>
				") : ("")) . "
			</tr>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- topMembers --*/
function topMembers($data) {
$IPBHTML = "";
$IPBHTML .= "" . ((count($data)) ? ("
<div class='ipsSideBlock clearfix'>
	<h3>{$this->lang->words['fb_topusers_title']}</h3>
	<ul id='topMembers' class='ipsList_withminiphoto'>
	".$this->__f__041d23eda480894b6783907cd740abc5($data)."	</ul>
</div>
") : ("")) . "";
return $IPBHTML;
}


function __f__041d23eda480894b6783907cd740abc5($data)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $data as $m )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
		<li>
			<a class=\"ipsUserPhotoLink\" href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$m['member_id']}&amp;tab=feedback", "public",'' ), "{$m['members_seo_name']}", "showuser" ) . "\">
				<img src='{$m['pp_small_photo']}' class='ipsUserPhoto ipsUserPhoto_mini' />
			</a>
			<a hovercard-ref=\"member\" hovercard-id=\"{$m['member_id']}\" class=\"_hovertrigger url fn\" href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$m['member_id']}&amp;tab=feedback", "public",'' ), "{$m['members_seo_name']}", "showuser" ) . "\">
				{$m['members_display_name']}
			</a>
			<span title='{$this->lang->words['totalpercent']}' class=\"value " . (($m['feedb_percent'] > 99) ? ("positive") : ("" . (($m['feedb_percent'] < 0 ) ? ("neutral") : ("" . (($m['feedb_percent'] < 40 ) ? ("negative") : ("")) . "")) . "")) . "\">" . (($m['feedb_percent']<0) ? ("N/A") : ("{$m['feedb_percent']}%")) . "</span>
		</li>
	
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- userHoverCard --*/
function userHoverCard($member) {
$IPBHTML = "";
$IPBHTML .= "<li>
	<a href='{$member['fbLink']}' class='feedback'>
	<span class=\"value positive\">{$member['feedb_pos']}</span>
	<span class=\"value\">{$member['feedb_neu']}</span>
	<span class=\"value negative\">{$member['feedb_neg']}</span>
	<span class=\"value " . (($member['feedb_percent'] > 99) ? ("positive") : ("" . (($member['feedb_percent'] < 0 ) ? ("neutral") : ("" . (($member['feedb_percent'] < 40 ) ? ("negative") : ("")) . "")) . "")) . "\">" . (($member['feedb_percent']<0) ? ("{$this->lang->words['fb_na']}") : ("{$member['feedb_percent']}%")) . "</span>
	</a>
</li>";
return $IPBHTML;
}

/* -- userLeaveLink --*/
function userLeaveLink($member, $cl=FALSE, $sendUrl=FALSE) {
$IPBHTML = "";
$IPBHTML .= "" . (($this->memberData['member_id'] != $member['member_id']) ? ("<li>
	<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=feedback&amp;module=view&amp;action=leave&amp;do={$member['member_id']}" . (($sendUrl) ? ("&amp;topic_url=" . urlencode(ipsRegistry::$settings['this_url']) . "") : ("")) . "", "public",'' ), "{$member['members_seo_name']}", "feedbackLeave" ) . "' " . ((!$cl) ? ("class='ipsButton_secondary'") : ("")) . "><img src=\"{$this->settings['img_url']}/notifications/notify_feedback.png\" alt=\"Leave Feedback\"> " . ((!$cl) ? ("&nbsp;&nbsp;") : ("")) . "{$this->lang->words['leave_title']}</a>
</li>") : ("")) . "";
return $IPBHTML;
}

/* -- userList --*/
function userList($users, $search) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_feedback', $this->_funcHooks['userList'] ) )
{
$count_8a2d9ca5de087a92c31a525d35d38ff9 = is_array($this->functionData['userList']) ? count($this->functionData['userList']) : 0;
$this->functionData['userList'][$count_8a2d9ca5de087a92c31a525d35d38ff9]['users'] = $users;
$this->functionData['userList'][$count_8a2d9ca5de087a92c31a525d35d38ff9]['search'] = $search;
}

if ( ! isset( $this->registry->templateStriping['loc'] ) ) {
$this->registry->templateStriping['loc'] = array( FALSE, "row1"," row2");
}
$IPBHTML .= "<p class='message'>{$this->lang->words['more_members_message']}</p><br/>
<h3 class='maintitle clear'>{$this->lang->words['members_starting']} {$search} </h3>
<div class=\"ipsBox\">
<ul class=\"ipsMemberList ipsBox_container ipsPad\">".$this->__f__86f1d382d3beea9c51473d56d1a1ea41($users,$search)."</ul>
</div>
	{$pages}";
return $IPBHTML;
}


function __f__86f1d382d3beea9c51473d56d1a1ea41($users, $search)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $users as $member )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
	<li id='member_id_{$member['member_id']}' class='ipsPad clearfix member_entry " .  IPSLib::next( $this->registry->templateStriping["loc"] ) . "'>
		<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$member['member_id']}&amp;tab=feedback", "public",'' ), "{$member['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}' class='ipsUserPhotoLink left'><img src='{$member['pp_small_photo']}' alt=\"{$member['members_display_name']}{$this->lang->words['users_photo']}\" class='ipsUserPhoto ipsUserPhoto_medium' /></a>
		<div class='ipsBox_withphoto'>
			<ul class='ipsList_inline right'>
				" . (($this->memberData['member_id'] AND $this->memberData['member_id'] != $member['member_id'] && $this->settings['friends_enabled'] AND $this->memberData['g_can_add_friends']) ? ("" . ((IPSMember::checkFriendStatus( $member['member_id'] )) ? ("
						<li class='mini_friend_toggle is_friend' id='friend_mlist_{$member['member_id']}'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=list&amp;module=profile&amp;section=friends&amp;do=remove&amp;member_id={$member['member_id']}&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' title='{$this->lang->words['remove_friend']}' class='ipsButton_secondary'>" . $this->registry->getClass('output')->getReplacement("remove_friend") . "</a></li>
					") : ("
						<li class='mini_friend_toggle is_not_friend' id='friend_mlist_{$member['member_id']}'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=list&amp;module=profile&amp;section=friends&amp;do=add&amp;member_id={$member['member_id']}&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' title='{$this->lang->words['add_friend']}' class='ipsButton_secondary'>" . $this->registry->getClass('output')->getReplacement("add_friend") . "</a></li>
					")) . "") : ("")) . "
				<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=search&amp;do=user_activity&amp;mid={$member['member_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['gbl_find_my_content']}' class='ipsButton_secondary'>" . $this->registry->getClass('output')->getReplacement("find_topics_link") . "</a></li>
				<li>
					<a class=\"ipsButton_secondary\" href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$member['member_id']}&amp;tab=feedback", "public",'' ), "{$member['members_seo_name']}", "showuser" ) . "\">{$this->lang->words['fb_gotomember']}</a>
				</li>
			</ul>
			<h3 class='ipsType_subtitle'>
				<strong><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$member['member_id']}&amp;tab=feedback", "public",'' ), "{$member['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}'>{$member['members_display_name']}</a></strong>

				" . (($this->settings['pp_allow_member_rate'] && $this->request['pp_rating_real']) ? ("<span class='rating'>
						" . (($member['pp_rating_real'] >= 1) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($member['pp_rating_real'] >= 2) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($member['pp_rating_real'] >= 3) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($member['pp_rating_real'] >= 4) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($member['pp_rating_real'] >= 5) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "
					</span>") : ("")) . "
			</h3>
			" . (($this->settings['reputation_enabled'] && $this->settings['reputation_show_profile']) ? ("" . (($member['pp_reputation_points'] == 0 || !$member['pp_reputation_points']) ? ("
					<p class='reputation zero ipsType_small left' data-tooltip=\"" . sprintf( $this->lang->words['member_has_x_rep'], $member['members_display_name'], $member['pp_reputation_points'] ) . "\">
				") : ("")) . "
				" . (($member['pp_reputation_points'] > 0) ? ("
					<p class='reputation positive ipsType_small left' data-tooltip=\"" . sprintf( $this->lang->words['member_has_x_rep'], $member['members_display_name'], $member['pp_reputation_points'] ) . "\">
				") : ("")) . "
				" . (($member['pp_reputation_points'] < 0) ? ("
					<p class='reputation negative ipsType_small left' data-tooltip=\"" . sprintf( $this->lang->words['member_has_x_rep'], $member['members_display_name'], $member['pp_reputation_points'] ) . "\">
				") : ("")) . "
						<span class='number'>{$member['pp_reputation_points']}</span>
					</p>") : ("")) . "
			<span class='desc'>
				{$this->lang->words['member_joined']} " . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($member['joined'],"joined", 0)) . "<br />
				" . IPSMember::makeNameFormatted( $member['group'], $member['member_group_id'] ) . " &middot; " . $this->registry->getClass('class_localization')->formatNumber( $member['posts'] ) . " {$this->lang->words['member_posts']}
			</span>
		</div>
	</li>

";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- userPaneFeedback --*/
function userPaneFeedback($member) {
$IPBHTML = "";
$IPBHTML .= "<li>
	<ul class=\"ipsType_small fbkProfStat uP\">
		<li>
			<span class=\"value " . (($member['feedb_percent'] > 99) ? ("positive") : ("" . (($member['feedb_percent'] < 0 ) ? ("neutral") : ("" . (($member['feedb_percent'] < 40 ) ? ("negative") : ("")) . "")) . "")) . "\">" . (($member['feedb_percent']<0) ? ("{$this->lang->words['fb_na']}") : ("{$member['feedb_percent']}%")) . "</span>
			<a href='{$member['fbLink']}'>{$this->lang->words['totalpercent']}</a>
		</li>
		<li>
			<span class=\"value positive\" data-tooltip=\"{$this->lang->words['totalpos']}\">{$member['feedb_pos']}</span>
			<span class=\"value\" data-tooltip=\"{$this->lang->words['totalneut']}\">{$member['feedb_neu']}</span>
			<span class=\"value negative\" data-tooltip=\"{$this->lang->words['totalneg']}\">{$member['feedb_neg']}</span>
		</li>
	</ul>
</li>";
return $IPBHTML;
}


}


/*--------------------------------------------------*/
/* END OF FILE                                      */
/*--------------------------------------------------*/

?>